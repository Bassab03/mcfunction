{
    "commands": {
        "commands": {
            "advancement": {
                "name": "advancement",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "grant",
                            "revoke"
                        ]
                    },
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "option",
                        "value": [
                            "everything",
                            "from",
                            "only",
                            "through",
                            "until"
                        ],
                        "change": {
                            "everything": [
                                {
                                    "type": "end"
                                }
                            ],
                            "only": [
                                {
                                    "type": "advancement",
                                    "value": "advancement"
                                },
                                {
                                    "type": "string",
                                    "value": "criterion"
                                },
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    },
                    {
                        "type": "advancement",
                        "value": "advancement"
                    }
                ]
            },
            "clear": {
                "name": "clear",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "targets"
                    },
                    {
                        "type": "item",
                        "value": "item"
                    },
                    {
                        "type": "string",
                        "value": "maxCount"
                    }
                ]
            },
            "clone": {
                "name": "clone",
                "cycleMarkers": [
                    {
                        "type": "coord",
                        "value": "x1 y1 z1"
                    },
                    {
                        "type": "coord",
                        "value": "x2 y2 z2"
                    },
                    {
                        "type": "coord",
                        "value": "xt yt zt"
                    },
                    {
                        "type": "option",
                        "value": [
                            "filtered",
                            "masked",
                            "replace"
                        ],
                        "change": {
                            "filtered": [
                                {
                                    "type": "block",
                                    "value": "filter"
                                }
                            ]
                        }
                    },
                    {
                        "type": "option",
                        "value": [
                            "force",
                            "move",
                            "normal"
                        ]
                    }
                ]
            },
            "data": {
                "name": "data",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "get",
                            "merge",
                            "modify",
                            "remove"
                        ],
                        "change": {
                            "get": [
                                {
                                    "include": "nbt-location"
                                },
                                {
                                    "type": "string",
                                    "value": "path",
                                    "optional": true
                                },
                                {
                                    "type": "string",
                                    "value": "scale",
                                    "optional": true
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "merge": [
                                {
                                    "include": "nbt-location"
                                },
                                {
                                    "type": "nbt",
                                    "value": "nbt"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "modify": [
                                {
                                    "include": "nbt-location"
                                },
                                {
                                    "type": "string",
                                    "value": "path",
                                    "optional": true
                                },
                                {
                                    "type": "option",
                                    "value": [
                                        "append",
                                        "insert",
                                        "merge",
                                        "prepend",
                                        "set"
                                    ],
                                    "change": {
                                        "insert": [
                                            {
                                                "type": "string",
                                                "value": "index"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "option",
                                    "value": [
                                        "from",
                                        "value"
                                    ],
                                    "change": {
                                        "from": [
                                            {
                                                "include": "nbt-location"
                                            },
                                            {
                                                "type": "string",
                                                "value": "path",
                                                "optional": true
                                            }
                                        ],
                                        "value": [
                                            {
                                                "type": "string",
                                                "value": "value"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "remove": [
                                {
                                    "include": "nbt-location"
                                },
                                {
                                    "type": "string",
                                    "value": "path"
                                },
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    }
                ]
            },
            "datapack": {
                "name": "datapack",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "disable",
                            "enable",
                            "list"
                        ],
                        "change": {
                            "disable": [
                                {
                                    "type": "string",
                                    "value": "name"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "enable": [
                                {
                                    "type": "string",
                                    "value": "name"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "list": [
                                {
                                    "type": "option",
                                    "optional": true,
                                    "value": [
                                        "availble",
                                        "enabled"
                                    ]
                                },
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    }
                ]
            },
            "defaultgamemode": {
                "name": "defaultgamemode",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "adventure",
                            "creative",
                            "spectator",
                            "survival"
                        ]
                    }
                ]
            },
            "difficulty": {
                "name": "difficulty",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "easy",
                            "hard",
                            "normal",
                            "peaceful"
                        ]
                    }
                ]
            },
            "effect": {
                "name": "effect",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "clear",
                            "give"
                        ],
                        "change": {
                            "clear": [
                                {
                                    "type": "entity",
                                    "value": "targets",
                                    "optional": true
                                },
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    },
                    {
                        "type": "entity",
                        "value": "targets"
                    },
                    {
                        "type": "effect",
                        "value": "effect"
                    },
                    {
                        "type": "string",
                        "value": "seconds"
                    },
                    {
                        "type": "string",
                        "value": "amplifier"
                    },
                    {
                        "type": "boolean",
                        "value": "hideParticles"
                    }
                ]
            },
            "execute": {
                "name": "execute",
                "cycleMarkers": [
                    {
                        "include": "execute"
                    }
                ]
            },
            "experience": {
                "name": "experience",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "add",
                            "set",
                            "query"
                        ],
                        "change": {
                            "query": [
                                {
                                    "type": "entity",
                                    "value": "player"
                                },
                                {
                                    "type": "option",
                                    "value": [
                                        "points",
                                        "levels"
                                    ]
                                },
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    },
                    {
                        "type": "entity",
                        "value": "players"
                    },
                    {
                        "type": "string",
                        "value": "amount"
                    },
                    {
                        "type": "option",
                        "value": [
                            "points",
                            "levels"
                        ]
                    }
                ]
            },
            "fill": {
                "name": "fill",
                "cycleMarkers": [
                    {
                        "type": "coord",
                        "value": "x y z"
                    },
                    {
                        "type": "coord",
                        "value": "xt yt zt"
                    },
                    {
                        "type": "block",
                        "value": "block"
                    },
                    {
                        "type": "option",
                        "value": [
                            "destroy",
                            "hollow",
                            "keep",
                            "outline",
                            "replace"
                        ],
                        "change": {
                            "replace": [
                                {
                                    "type": "block",
                                    "filter": "filter"
                                }
                            ]
                        }
                    }
                ]
            },
            "forceload": {
                "name": "forceload",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "add",
                            "remove",
                            "query"
                        ],
                        "change": {
                            "add": [
                                {
                                    "type": "string",
                                    "value": "x1"
                                },
                                {
                                    "type": "string",
                                    "value": "y1"
                                },
                                {
                                    "type": "string",
                                    "value": "x2",
                                    "optional": true
                                },
                                {
                                    "type": "string",
                                    "value": "y2",
                                    "optional": true
                                }
                            ],
                            "remove": [
                                {
                                    "type": "string",
                                    "value": "x1"
                                },
                                {
                                    "type": "string",
                                    "value": "y1"
                                },
                                {
                                    "type": "string",
                                    "value": "x2",
                                    "optional": true
                                },
                                {
                                    "type": "string",
                                    "value": "y2",
                                    "optional": true
                                }
                            ],
                            "query": [
                                {
                                    "type": "string",
                                    "value": "x1"
                                },
                                {
                                    "type": "string",
                                    "value": "y1"
                                }
                            ]
                        }
                    }
                ]
            },
            "function": {
                "name": "function",
                "cycleMarkers": [
                    {
                        "type": "function",
                        "value": "name"
                    }
                ]
            },
            "gamemode": {
                "name": "gamemode",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "adventure",
                            "creative",
                            "spectator",
                            "survival"
                        ]
                    },
                    {
                        "type": "player",
                        "value": "target",
                        "optional": true
                    }
                ]
            },
            "gamerule": {
                "name": "gamerule",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "announceAdvancements",
                            "commandBlockOutput",
                            "disableElytraMovementCheck",
                            "disableRaids",
                            "doDaylightCycle",
                            "doEntityDrops",
                            "doFireTick",
                            "doImmediateRespawn",
                            "doInsomnia",
                            "doLimitedCrafting",
                            "doMobloot",
                            "doMobSpawning",
                            "drowningDamage",
                            "doTileDrops",
                            "doWeatherCycle",
                            "fallDamage",
                            "fireDamage",
                            "keepInventory",
                            "logAdminCommands",
                            "maxCommandChainLength",
                            "maxEntityCramming",
                            "mobGriefing",
                            "naturalRegeneration",
                            "randomTickSpeed",
                            "reducedDebugInfo",
                            "sendCommandFeedback",
                            "showDeathMessages",
                            "spawnRadius",
                            "spectatorsGenerateChunks"
                        ],
                        "change": {
                            "maxCommandChainLength": [
                                {
                                    "type": "string",
                                    "value": "value"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "maxEntityCramming": [
                                {
                                    "type": "string",
                                    "value": "value"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "randomTickSpeed": [
                                {
                                    "type": "string",
                                    "value": "value"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "spawnRadius": [
                                {
                                    "type": "string",
                                    "value": "value"
                                },
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    },
                    {
                        "type": "boolean",
                        "value": "value"
                    }
                ]
            },
            "give": {
                "name": "give",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "item",
                        "value": "item"
                    },
                    {
                        "type": "string",
                        "value": "count"
                    }
                ]
            },
            "kill": {
                "name": "kill",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "vicitms",
                        "optional": true
                    }
                ]
            },
            "locate": {
                "name": "locate",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "Burried_Treasure",
                            "Desert_Pyramid",
                            "EndCity",
                            "Fortress",
                            "Igloo",
                            "Jungle_Pyramid",
                            "Mansion",
                            "Mineshaft",
                            "Monument",
                            "Ocean_Ruin",
                            "Pillager_Outpost",
                            "Shipwreck",
                            "Stronghold",
                            "Swamp_Hut",
                            "Village"
                        ]
                    }
                ]
            },
            "locatebiome": {
                "name": "locatebiome",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "minecraft:badlands",
                            "minecraft:badlands_plateau",
                            "minecraft:bamboo_jungle",
                            "minecraft:bamboo_jungle_hills",
                            "minecraft:beach",
                            "minecraft:birch_forest",
                            "minecraft:birch_forest_hills",
                            "minecraft:cold_ocean",
                            "minecraft:crimson_forest",
                            "minecraft:dark_forest",
                            "minecraft:dark_forest_hills",
                            "minecraft:deep_cold_ocean",
                            "minecraft:deep_frozen_ocean",
                            "minecraft:deep_lukewarm_ocean",
                            "minecraft:deep_ocean",
                            "minecraft:deep_warm_ocean",
                            "minecraft:desert",
                            "minecraft:desert_hills",
                            "minecraft:desert_lakes",
                            "minecraft:end_barrens",
                            "minecraft:end_highlands",
                            "minecraft:eroded_badlands",
                            "minecraft:flower_forest",
                            "minecraft:forest",
                            "minecraft:frozen_ocean",
                            "minecraft:frozen_river",
                            "minecraft:giant_spruce_taiga",
                            "minecraft:giant_spruce_taiga_hills",
                            "minecraft:giant_tree_taiga",
                            "minecraft:giant_tree_taiga_hills",
                            "minecraft:gravelly_mountains",
                            "minecraft:ice_spikes",
                            "minecraft:jungle",
                            "minecraft:jungle_edge",
                            "minecraft:jungle_hills",
                            "minecraft:lukewarm_ocean",
                            "minecraft:modified_badlands_plateau",
                            "minecraft:modified_gravelly_mountains",
                            "minecraft:modified_jungle",
                            "minecraft:modified_jungle_edge",
                            "minecraft:modified_wooded_badlands_plateau",
                            "minecraft:mountain_edge",
                            "minecraft:mushroom_field_shore",
                            "minecraft:mushroom_fields",
                            "minecraft:nether_wastes",
                            "minecraft:ocean",
                            "minecraft:plains",
                            "minecraft:river",
                            "minecraft:savanna",
                            "minecraft:savanna_plateau",
                            "minecraft:shattered_savanna",
                            "minecraft:shattedred_savanna_plateau",
                            "minecraft:small_end_islands",
                            "minecraft:snowy_beach",
                            "minecraft:snowy_mountains",
                            "minecraft:snowy_taiga",
                            "minecraft:snowy_taiga_hills",
                            "minecraft:snowy_taiga_mountains",
                            "minecraft:snowy_tundra",
                            "minecraft:soul_sand_valley",
                            "minecraft:stone_shore",
                            "minecraft:sunflower_plains",
                            "minecraft:swamp",
                            "minecraft:swamp_hills",
                            "minecraft:taiga",
                            "minecraft:taiga_hills",
                            "minecraft:taiga_mountains",
                            "minecraft:tall_birch_forest",
                            "minecraft:tall_brich_hills",
                            "minecraft:the_end",
                            "minecraft:the_void",
                            "minecraft:warm_ocean",
                            "minecraft:warped_forest",
                            "minecraft_wooded_badlands_plateau",
                            "minecraft:wooded_hills",
                            "minecraft:wooded_mountains"
                        ]
                    }
                ]
            },
            "loot": {
                "location": {
                    "first_line": 15,
                    "first_column": 4,
                    "last_column": 4
                },
                "code": "name: 'loot'\ncycleMarkers: [\n\t{\n\t\ttype: 'option'\n\t\tvalue: [\n\t\t\t'give'\n\t\t\t'insert'\n\t\t\t'replace'\n\t\t\t'spawn'\n\t\t]\n\t\tchange:\n\t\t\tgive:[\n\t\t\t{\n\t\t\t\ttype: 'entity'\n\t\t\t\tvalue: 'target'\n\t\t\t}\n\t\t]\n\t\tinsert:[\n\t\t\t{\n\t\t\t\ttype: 'coord'\n\t\t\t\tvalue: 'x y z'\n\t\t\t}\n\t\t]\n\t\tspawn:[\n\t\t\t{\n\t\t\t\ttype: 'coord'\n\t\t\t\tvalue: 'x y z'\n\t\t\t}\n\t\t]\n\t\treplace:[\n\t\t\ttype: 'option'\n\t\t\tvalue: [\n\t\t\t\t'block'\n\t\t\t\t'entity'\n\t\t\t]\n\t\t\tentity:[\n\t\t\t{\n\t\t\t\ttype: 'entity'\n\t\t\t\tvalue: 'target'\n\t\t\t}\n\t\t\t]\n\t\t\tblock:[\n\t\t\t\t{\n\t\t\t\t\ttype: 'coord'\n\t\t\t\t\tvalue: 'x y z'\n\t\t\t\t}\n\t\t\t]\n\t\t\t{\n\t\t\t\ttype: 'inventory-slot'\n\t\t\t\tvalue: 'slot'\n\t\t\t}\n\t\t]\n\n\t}\n\t{\n\t\ttype: 'option'\n\t\tvalue: [\n\t\t\t'fish'\n\t\t\t'kill'\n\t\t\t'loot'\n\t\t\t'mine'\n\t\t]\n\t\tchange:\n\t\t\tfish:[\n\t\t\t\t{\n\t\t\t\t\ttype: 'string'\n\t\t\t\t\tvalue: 'block loot'\n\t\t\t\t}\n\t\t\t]\n\t\t\tloot:[\n\t\t\t\t{\n\t\t\t\t\ttype: 'string'\n\t\t\t\t\tvalue: 'block loot'\n\t\t\t\t}\n\t\t\t]\n\t\t\tkill:[\n\t\t\t\t{\n\t\t\t\t\ttype: 'entity'\n\t\t\t\t\tvalue: 'target'\n\t\t\t\t}\n\t\t\t]\n\t\t\tmine:[\n\t\t\t\t{\n\t\t\t\t\ttype: 'coord'\n\t\t\t\t\tvalue: 'x y z'\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\ttype: 'string'\n\t\t\t\t\tvalue: 'tool'\n\t\t\t\t}\n\t\t\t]\n\t}\n]\n"
            },
            "me": {
                "name": "me",
                "cycleMarkers": [
                    {
                        "type": "greedy",
                        "value": "action"
                    }
                ]
            },
            "msg": {
                "name": "msg",
                "alias": "tell"
            },
            "particle": {
                "name": "particle",
                "cycleMarkers": [
                    {
                        "type": "particle",
                        "value": "name"
                    },
                    {
                        "type": "coord",
                        "value": "x y z"
                    },
                    {
                        "type": "coord",
                        "value": "x y z"
                    },
                    {
                        "type": "string",
                        "value": "speed"
                    },
                    {
                        "type": "string",
                        "value": "count"
                    },
                    {
                        "type": "option",
                        "value": [
                            "normal",
                            "force"
                        ]
                    },
                    {
                        "type": "entity",
                        "value": "veiwers"
                    }
                ]
            },
            "playsound": {
                "name": "playsound",
                "cycleMarkers": [
                    {
                        "type": "sound",
                        "value": "name"
                    },
                    {
                        "type": "option",
                        "value": [
                            "ambient",
                            "block",
                            "hostile",
                            "master",
                            "music",
                            "neutral",
                            "player",
                            "record",
                            "voice",
                            "weather"
                        ]
                    },
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "coord",
                        "value": "x y z"
                    },
                    {
                        "type": "string",
                        "value": "volume"
                    },
                    {
                        "type": "string",
                        "value": "pitch"
                    },
                    {
                        "type": "string",
                        "value": "minVolume"
                    }
                ]
            },
            "recipe": {
                "name": "recipe",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "give",
                            "take"
                        ]
                    },
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "recipe",
                        "value": "recipe"
                    }
                ]
            },
            "replaceitem": {
                "name": "replaceitem",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "entity",
                            "block"
                        ],
                        "change": {
                            "entity": [
                                {
                                    "type": "entity",
                                    "value": "targets"
                                }
                            ],
                            "block": [
                                {
                                    "type": "coord",
                                    "value": "x y z"
                                }
                            ]
                        }
                    },
                    {
                        "type": "inventory-slot",
                        "value": "slot"
                    },
                    {
                        "type": "item",
                        "value": "item"
                    },
                    {
                        "type": "string",
                        "value": "count"
                    }
                ]
            },
            "say": {
                "name": "say",
                "cycleMarkers": [
                    {
                        "type": "greedy",
                        "value": "message"
                    }
                ]
            },
            "schedule": {
                "name": "schedule",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "function",
                            "clear"
                        ],
                        "change": {
                            "clear": [
                                {
                                    "type": "end"
                                }
                            ],
                            "function": [
                                {
                                    "type": "function",
                                    "value": "function"
                                },
                                {
                                    "type": "string",
                                    "value": "time"
                                },
                                {
                                    "type": "option",
                                    "optional": true,
                                    "value": [
                                        "append",
                                        "replace"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "scoreboard": {
                "name": "scoreboard",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "objectives",
                            "players"
                        ],
                        "change": {
                            "objectives": [
                                {
                                    "type": "option",
                                    "value": [
                                        "add",
                                        "remove",
                                        "setdisplay"
                                    ],
                                    "change": {
                                        "add": [
                                            {
                                                "type": "string",
                                                "value": "objective"
                                            },
                                            {
                                                "type": "objective",
                                                "value": "criteria"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "remove": [
                                            {
                                                "type": "string",
                                                "value": "objective"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "setdisplay": [
                                            {
                                                "type": "objective-slot",
                                                "value": "slot"
                                            },
                                            {
                                                "type": "string",
                                                "value": "objective"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "players": [
                                {
                                    "type": "option",
                                    "value": [
                                        "add",
                                        "enable",
                                        "list",
                                        "operation",
                                        "remove",
                                        "reset",
                                        "set",
                                        "get"
                                    ],
                                    "change": {
                                        "add": [
                                            {
                                                "type": "entity",
                                                "value": "target"
                                            },
                                            {
                                                "type": "string",
                                                "value": "objective"
                                            },
                                            {
                                                "type": "string",
                                                "value": "score"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "enable": [
                                            {
                                                "type": "entity",
                                                "value": "target"
                                            },
                                            {
                                                "type": "string",
                                                "value": "trigger"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "list": [
                                            {
                                                "type": "entity",
                                                "value": "target"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "operation": [
                                            {
                                                "type": "entity",
                                                "value": "target"
                                            },
                                            {
                                                "type": "string",
                                                "value": "target objective"
                                            },
                                            {
                                                "type": "option",
                                                "value": [
                                                    "+=",
                                                    "-=",
                                                    "*=",
                                                    "/=",
                                                    "%=",
                                                    "=",
                                                    "<",
                                                    ">",
                                                    "><"
                                                ]
                                            },
                                            {
                                                "type": "entity",
                                                "value": "source"
                                            },
                                            {
                                                "type": "string",
                                                "value": "source objective"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "remove": [
                                            {
                                                "type": "entity",
                                                "value": "target"
                                            },
                                            {
                                                "type": "string",
                                                "value": "objective"
                                            },
                                            {
                                                "type": "string",
                                                "value": "score"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "reset": [
                                            {
                                                "type": "entity",
                                                "value": "targets"
                                            },
                                            {
                                                "type": "string",
                                                "value": "objective"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "set": [
                                            {
                                                "type": "entity",
                                                "value": "target"
                                            },
                                            {
                                                "type": "string",
                                                "value": "objective"
                                            },
                                            {
                                                "type": "string",
                                                "value": "score"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "get": [
                                            {
                                                "type": "entity",
                                                "value": "targets"
                                            },
                                            {
                                                "type": "string",
                                                "value": "objective"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "seed": {
                "name": "seed",
                "cycleMarkers": []
            },
            "setblock": {
                "name": "setblock",
                "cycleMarkers": [
                    {
                        "type": "coord",
                        "value": "x y z"
                    },
                    {
                        "type": "block",
                        "value": "block"
                    },
                    {
                        "type": "option",
                        "value": [
                            "destroy",
                            "keep",
                            "replace"
                        ]
                    }
                ]
            },
            "setworldspawn": {
                "name": "setworldspawn",
                "cycleMarkers": [
                    {
                        "type": "coord",
                        "value": "x y z"
                    }
                ]
            },
            "spawnpoint": {
                "name": "spawnpoint",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "target",
                        "optional": true
                    },
                    {
                        "type": "coord",
                        "value": "x y z",
                        "optional": true
                    }
                ]
            },
            "spectate": {
                "name": "tp",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "entity",
                        "value": "target"
                    }
                ]
            },
            "spreadplayers": {
                "name": "spreadplayers",
                "cycleMarkers": [
                    {
                        "type": "center",
                        "value": "x z"
                    },
                    {
                        "type": "string",
                        "value": "spreadDistance"
                    },
                    {
                        "type": "string",
                        "value": "maxRange"
                    },
                    {
                        "type": "boolean",
                        "value": "respectTeams"
                    },
                    {
                        "type": "entity",
                        "value": "victims"
                    }
                ]
            },
            "stopsound": {
                "name": "stopsound",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "option",
                        "value": [
                            "ambient",
                            "block",
                            "hostile",
                            "master",
                            "music",
                            "neutral",
                            "player",
                            "record",
                            "voice",
                            "weather"
                        ]
                    },
                    {
                        "type": "sound",
                        "value": "name"
                    }
                ]
            },
            "summon": {
                "name": "summon",
                "cycleMarkers": [
                    {
                        "type": "entity-id",
                        "value": "name"
                    },
                    {
                        "type": "coord",
                        "value": "x y z"
                    },
                    {
                        "type": "nbt",
                        "value": "nbt"
                    }
                ]
            },
            "tag": {
                "name": "tag",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "option",
                        "value": [
                            "add",
                            "list",
                            "remove"
                        ],
                        "change": {
                            "list": [
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    },
                    {
                        "type": "string",
                        "value": "name"
                    }
                ]
            },
            "team": {
                "name": "team",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "add",
                            "empty",
                            "join",
                            "leave",
                            "list",
                            "option",
                            "remove"
                        ],
                        "change": {
                            "add": [
                                {
                                    "type": "string",
                                    "value": "team"
                                },
                                {
                                    "type": "greedy",
                                    "value": "display name"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "empty": [
                                {
                                    "type": "string",
                                    "value": "team"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "join": [
                                {
                                    "type": "string",
                                    "value": "team"
                                },
                                {
                                    "type": "entity",
                                    "value": "memebers"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "leave": [
                                {
                                    "type": "entity",
                                    "value": "memebers"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "list": [
                                {
                                    "type": "string",
                                    "value": "team"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "option": [
                                {
                                    "type": "string",
                                    "value": "team"
                                },
                                {
                                    "type": "option",
                                    "value": [
                                        "collisionRule",
                                        "color",
                                        "deathMessageVisibility",
                                        "friendlyFire",
                                        "nametagVisibility",
                                        "seeFriendlyInvisibles"
                                    ],
                                    "change": {
                                        "collisionRule": [
                                            {
                                                "type": "option",
                                                "value": [
                                                    "always",
                                                    "never",
                                                    "pushOtherTeams",
                                                    "pushOwnTeam"
                                                ]
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "color": [
                                            {
                                                "type": "option",
                                                "value": [
                                                    "aqua",
                                                    "black",
                                                    "blue",
                                                    "dark_blue",
                                                    "dark_green",
                                                    "dark_aqua",
                                                    "dark_red",
                                                    "dark_purple",
                                                    "dark_gray",
                                                    "gold",
                                                    "gray",
                                                    "green",
                                                    "red",
                                                    "light_purple",
                                                    "yellow",
                                                    "white"
                                                ]
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "deathMessageVisibility": [
                                            {
                                                "type": "option",
                                                "value": [
                                                    "always",
                                                    "never",
                                                    "hideForOtherTeams",
                                                    "hideForOwnTeam"
                                                ]
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "friendlyFire": [
                                            {
                                                "type": "boolean",
                                                "value": "value"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "nametagVisibility": [
                                            {
                                                "type": "option",
                                                "value": [
                                                    "always",
                                                    "never",
                                                    "hideForOtherTeams",
                                                    "hideForOwnTeam"
                                                ]
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "seeFriendlyInvisibles": [
                                            {
                                                "type": "boolean",
                                                "value": "value"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "remove": [
                                {
                                    "type": "string",
                                    "value": "team"
                                }
                            ]
                        }
                    }
                ]
            },
            "tell": {
                "name": "tell",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "targets"
                    },
                    {
                        "type": "greedy",
                        "value": "message"
                    }
                ]
            },
            "tellraw": {
                "name": "tellraw",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "targets"
                    },
                    {
                        "type": "string",
                        "value": "message"
                    }
                ]
            },
            "time": {
                "name": "time",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "add",
                            "query",
                            "set"
                        ],
                        "change": {
                            "add": [
                                {
                                    "type": "string",
                                    "value": "time"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "query": [
                                {
                                    "type": "option",
                                    "value": [
                                        "day",
                                        "daytime",
                                        "gametime"
                                    ]
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "set": [
                                {
                                    "type": "string",
                                    "value": "time"
                                },
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    }
                ]
            },
            "title": {
                "name": "title",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "option",
                        "value": [
                            "actionbar",
                            "clear",
                            "reset",
                            "subtitle",
                            "times",
                            "title"
                        ],
                        "change": {
                            "times": [
                                {
                                    "type": "string",
                                    "value": "fadeIn"
                                },
                                {
                                    "type": "string",
                                    "value": "stay"
                                },
                                {
                                    "type": "string",
                                    "value": "fadeOut"
                                },
                                {
                                    "type": "end"
                                }
                            ]
                        }
                    },
                    {
                        "type": "string",
                        "value": "title"
                    }
                ]
            },
            "tp": {
                "name": "tp",
                "cycleMarkers": [
                    {
                        "type": "entity",
                        "value": "target"
                    },
                    {
                        "type": "string",
                        "value": "destination or target"
                    }
                ]
            },
            "trigger": {
                "name": "trigger",
                "cycleMarkers": [
                    {
                        "type": "string",
                        "value": "objective"
                    },
                    {
                        "type": "option",
                        "value": [
                            "add",
                            "set"
                        ]
                    }
                ]
            },
            "w": {
                "name": "w",
                "alias": "tell"
            },
            "weather": {
                "name": "weather",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "clear",
                            "rain",
                            "thunder"
                        ]
                    },
                    {
                        "type": "string",
                        "value": "duration"
                    }
                ]
            },
            "worldborder": {
                "name": "worldborder",
                "cycleMarkers": [
                    {
                        "type": "option",
                        "value": [
                            "add",
                            "center",
                            "damage",
                            "get",
                            "set",
                            "warning"
                        ],
                        "change": {
                            "add": [
                                {
                                    "type": "string",
                                    "value": "distance"
                                },
                                {
                                    "type": "string",
                                    "value": "time"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "center": [
                                {
                                    "type": "center",
                                    "value": "x z"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "damage": [
                                {
                                    "type": "option",
                                    "value": [
                                        "amount",
                                        "buffer"
                                    ],
                                    "change": {
                                        "amount": [
                                            {
                                                "type": "string",
                                                "value": "damagePerBlock"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "buffer": [
                                            {
                                                "type": "string",
                                                "value": "distance"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "set": [
                                {
                                    "type": "string",
                                    "value": "distance"
                                },
                                {
                                    "type": "string",
                                    "value": "time"
                                },
                                {
                                    "type": "end"
                                }
                            ],
                            "warning": [
                                {
                                    "type": "option",
                                    "value": [
                                        "distance",
                                        "time"
                                    ],
                                    "change": {
                                        "distance": [
                                            {
                                                "type": "string",
                                                "value": "distance"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ],
                                        "time": [
                                            {
                                                "type": "string",
                                                "value": "time"
                                            },
                                            {
                                                "type": "end"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "xp": {
                "alias": "experience",
                "name": "xp"
            }
        },
        "reference": {
            "execute": {
                "type": "option",
                "value": [
                    "align",
                    "anchored",
                    "as",
                    "at",
                    "if",
                    "positioned",
                    "store",
                    "unless",
                    "run"
                ],
                "change": {
                    "align": [
                        {
                            "type": "option",
                            "value": [
                                "x",
                                "y",
                                "z",
                                "xy",
                                "xz",
                                "yz",
                                "xyz"
                            ]
                        },
                        {
                            "include": "execute"
                        }
                    ],
                    "anchored": [
                        {
                            "type": "option",
                            "value": [
                                "eyes",
                                "feet"
                            ]
                        },
                        {
                            "include": "execute"
                        }
                    ],
                    "as": [
                        {
                            "type": "entity",
                            "value": "targets"
                        },
                        {
                            "include": "execute"
                        }
                    ],
                    "at": [
                        {
                            "type": "entity",
                            "value": "targets"
                        },
                        {
                            "include": "execute"
                        }
                    ],
                    "if": [
                        {
                            "include": "if-unless"
                        },
                        {
                            "include": "execute"
                        }
                    ],
                    "unless": [
                        {
                            "include": "if-unless"
                        },
                        {
                            "include": "execute"
                        }
                    ],
                    "positioned": [
                        {
                            "type": "coord",
                            "value": "x y z"
                        },
                        {
                            "include": "execute"
                        }
                    ],
                    "store": [
                        {
                            "type": "option",
                            "value": [
                                "result",
                                "success"
                            ]
                        },
                        {
                            "type": "option",
                            "value": [
                                "block",
                                "entity",
                                "score",
                                "storage"
                            ],
                            "change": {
                                "block": [
                                    {
                                        "type": "coord",
                                        "value": "x y z"
                                    }
                                ],
                                "entity": [
                                    {
                                        "type": "entity",
                                        "value": "target"
                                    }
                                ],
                                "score": [
                                    {
                                        "type": "entity",
                                        "value": "target"
                                    },
                                    {
                                        "type": "string",
                                        "value": "objective"
                                    },
                                    {
                                        "include": "execute"
                                    }
                                ],
                                "storage": [
                                    {
                                        "type": "string",
                                        "value": "target"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "string",
                            "value": "path"
                        },
                        {
                            "type": "option",
                            "value": [
                                "byte",
                                "double",
                                "float",
                                "int",
                                "long",
                                "short"
                            ]
                        },
                        {
                            "type": "string",
                            "value": "scale"
                        },
                        {
                            "include": "execute"
                        }
                    ],
                    "run": [
                        {
                            "type": "command"
                        }
                    ]
                }
            },
            "if-unless": {
                "type": "option",
                "value": [
                    "entity",
                    "block",
                    "blocks",
                    "score",
                    "predicate",
                    "data"
                ],
                "change": {
                    "entity": [
                        {
                            "type": "entity",
                            "value": "targets"
                        }
                    ],
                    "block": [
                        {
                            "type": "coord",
                            "value": "x y z"
                        },
                        {
                            "type": "block",
                            "value": "block"
                        }
                    ],
                    "blocks": [
                        {
                            "type": "coord",
                            "value": "x1 y1 z1"
                        },
                        {
                            "type": "coord",
                            "value": "x2 y2 z2"
                        },
                        {
                            "type": "coord",
                            "value": "xt yt zt"
                        },
                        {
                            "type": "option",
                            "value": [
                                "all",
                                "masked"
                            ]
                        }
                    ],
                    "score": [
                        {
                            "type": "entity",
                            "value": "target"
                        },
                        {
                            "type": "string",
                            "value": "targetObjective"
                        },
                        {
                            "type": "option",
                            "value": [
                                "<",
                                "<=",
                                "=",
                                ">=",
                                ">",
                                "matches"
                            ],
                            "change": {
                                "matches": [
                                    {
                                        "type": "string",
                                        "value": "range"
                                    }
                                ],
                                "<": [
                                    {
                                        "type": "entity",
                                        "value": "source"
                                    },
                                    {
                                        "type": "string",
                                        "value": "sourceObjective"
                                    }
                                ],
                                "<=": [
                                    {
                                        "type": "entity",
                                        "value": "source"
                                    },
                                    {
                                        "type": "string",
                                        "value": "sourceObjective"
                                    }
                                ],
                                "=": [
                                    {
                                        "type": "entity",
                                        "value": "source"
                                    },
                                    {
                                        "type": "string",
                                        "value": "sourceObjective"
                                    }
                                ],
                                "=>": [
                                    {
                                        "type": "entity",
                                        "value": "source"
                                    },
                                    {
                                        "type": "string",
                                        "value": "sourceObjective"
                                    }
                                ],
                                ">": [
                                    {
                                        "type": "entity",
                                        "value": "source"
                                    },
                                    {
                                        "type": "string",
                                        "value": "sourceObjective"
                                    }
                                ]
                            }
                        }
                    ],
                    "predicate": [
                        {
                            "type": "string",
                            "value": "target"
                        }
                    ],
                    "data": [
                        {
                            "include": "nbt-location"
                        },
                        {
                            "type": "string",
                            "value": "path"
                        }
                    ]
                }
            },
            "nbt-location": {
                "type": "option",
                "value": [
                    "block",
                    "entity",
                    "storage"
                ],
                "change": {
                    "block": [
                        {
                            "type": "coord",
                            "value": "x y z"
                        }
                    ],
                    "entity": [
                        {
                            "type": "entity",
                            "value": "target"
                        }
                    ],
                    "storage": [
                        {
                            "type": "string",
                            "value": "target"
                        }
                    ]
                }
            }
        }
    },
    "id": {
        "advancement": [
            "minecraft:adventure/adventuring_time",
            "minecraft:adventure/kill_a_mob",
            "minecraft:adventure/kill_all_mobs",
            "minecraft:adventure/root",
            "minecraft:adventure/shoot_arrow",
            "minecraft:adventure/sleep_in_bed",
            "minecraft:adventure/sniper_duel",
            "minecraft:adventure/summon_iron_golem",
            "minecraft:adventure/totem_of_undying",
            "minecraft:adventure/trade",
            "minecraft:end/dragon_breath",
            "minecraft:end/dragon_egg",
            "minecraft:end/elytra",
            "minecraft:end/enter_end_gateway",
            "minecraft:end/find_end_city",
            "minecraft:end/kill_dragon",
            "minecraft:end/levitate",
            "minecraft:end/respawn_dragon",
            "minecraft:end/root",
            "minecraft:husbandry/balanced_diet",
            "minecraft:husbandry/break_diamond_hoe",
            "minecraft:husbandry/bred_all_animals",
            "minecraft:husbandry/breed_an_animal",
            "minecraft:husbandry/plant_seed",
            "minecraft:husbandry/root",
            "minecraft:husbandry/tame_an_animal",
            "minecraft:nether/all_effects",
            "minecraft:nether/all_potions",
            "minecraft:nether/brew_potion",
            "minecraft:nether/create_beacon",
            "minecraft:nether/create_full_beacon",
            "minecraft:nether/fast_travel",
            "minecraft:nether/find_fortress",
            "minecraft:nether/get_wither_skull",
            "minecraft:nether/obtain_blaze_rod",
            "minecraft:nether/return_to_sender",
            "minecraft:nether/root",
            "minecraft:nether/summon_wither",
            "minecraft:nether/uneasy_alliance",
            "minecraft:recipes/brewing/blaze_powder",
            "minecraft:recipes/brewing/brewing_stand",
            "minecraft:recipes/brewing/cauldron",
            "minecraft:recipes/brewing/fermented_spider_eye",
            "minecraft:recipes/brewing/glass_bottle",
            "minecraft:recipes/brewing/golden_carrot",
            "minecraft:recipes/brewing/magma_cream",
            "minecraft:recipes/brewing/speckled_melon",
            "minecraft:recipes/building_blocks/acacia_planks",
            "minecraft:recipes/building_blocks/acacia_stairs",
            "minecraft:recipes/building_blocks/acacia_wooden_slab",
            "minecraft:recipes/building_blocks/andesite",
            "minecraft:recipes/building_blocks/birch_planks",
            "minecraft:recipes/building_blocks/birch_stairs",
            "minecraft:recipes/building_blocks/birch_wooden_slab",
            "minecraft:recipes/building_blocks/black_concrete_powder",
            "minecraft:recipes/building_blocks/black_stained_glass",
            "minecraft:recipes/building_blocks/black_stained_hardened_clay",
            "minecraft:recipes/building_blocks/black_wool",
            "minecraft:recipes/building_blocks/blue_concrete_powder",
            "minecraft:recipes/building_blocks/blue_stained_glass",
            "minecraft:recipes/building_blocks/blue_stained_hardened_clay",
            "minecraft:recipes/building_blocks/blue_wool",
            "minecraft:recipes/building_blocks/bone_block",
            "minecraft:recipes/building_blocks/bookshelf",
            "minecraft:recipes/building_blocks/brick_block",
            "minecraft:recipes/building_blocks/brick_slab",
            "minecraft:recipes/building_blocks/brick_stairs",
            "minecraft:recipes/building_blocks/brown_concrete_powder",
            "minecraft:recipes/building_blocks/brown_stained_glass",
            "minecraft:recipes/building_blocks/brown_stained_hardened_clay",
            "minecraft:recipes/building_blocks/brown_wool",
            "minecraft:recipes/building_blocks/chiseled_quartz_block",
            "minecraft:recipes/building_blocks/chiseled_red_sandstone",
            "minecraft:recipes/building_blocks/chiseled_sandstone",
            "minecraft:recipes/building_blocks/chiseled_stonebrick",
            "minecraft:recipes/building_blocks/clay",
            "minecraft:recipes/building_blocks/coal_block",
            "minecraft:recipes/building_blocks/coarse_dirt",
            "minecraft:recipes/building_blocks/cobblestone_slab",
            "minecraft:recipes/building_blocks/cyan_concrete_powder",
            "minecraft:recipes/building_blocks/cyan_stained_glass",
            "minecraft:recipes/building_blocks/cyan_stained_hardened_clay",
            "minecraft:recipes/building_blocks/cyan_wool",
            "minecraft:recipes/building_blocks/dark_oak_planks",
            "minecraft:recipes/building_blocks/dark_oak_stairs",
            "minecraft:recipes/building_blocks/dark_oak_wooden_slab",
            "minecraft:recipes/building_blocks/dark_prismarine",
            "minecraft:recipes/building_blocks/diamond_block",
            "minecraft:recipes/building_blocks/diorite",
            "minecraft:recipes/building_blocks/emerald_block",
            "minecraft:recipes/building_blocks/end_bricks",
            "minecraft:recipes/building_blocks/glowstone",
            "minecraft:recipes/building_blocks/gold_block",
            "minecraft:recipes/building_blocks/granite",
            "minecraft:recipes/building_blocks/gray_concrete_powder",
            "minecraft:recipes/building_blocks/gray_stained_glass",
            "minecraft:recipes/building_blocks/gray_stained_hardened_clay",
            "minecraft:recipes/building_blocks/gray_wool",
            "minecraft:recipes/building_blocks/green_concrete_powder",
            "minecraft:recipes/building_blocks/green_stained_glass",
            "minecraft:recipes/building_blocks/green_stained_hardened_clay",
            "minecraft:recipes/building_blocks/green_wool",
            "minecraft:recipes/building_blocks/hay_block",
            "minecraft:recipes/building_blocks/iron_block",
            "minecraft:recipes/building_blocks/jungle_planks",
            "minecraft:recipes/building_blocks/jungle_stairs",
            "minecraft:recipes/building_blocks/jungle_wooden_slab",
            "minecraft:recipes/building_blocks/lapis_block",
            "minecraft:recipes/building_blocks/light_blue_concrete_powder",
            "minecraft:recipes/building_blocks/light_blue_stained_glass",
            "minecraft:recipes/building_blocks/light_blue_stained_hardened_clay",
            "minecraft:recipes/building_blocks/light_blue_wool",
            "minecraft:recipes/building_blocks/light_gray_concrete_powder",
            "minecraft:recipes/building_blocks/light_gray_stained_glass",
            "minecraft:recipes/building_blocks/light_gray_stained_hardened_clay",
            "minecraft:recipes/building_blocks/light_gray_wool",
            "minecraft:recipes/building_blocks/lime_concrete_powder",
            "minecraft:recipes/building_blocks/lime_stained_glass",
            "minecraft:recipes/building_blocks/lime_stained_hardened_clay",
            "minecraft:recipes/building_blocks/lime_wool",
            "minecraft:recipes/building_blocks/lit_pumpkin",
            "minecraft:recipes/building_blocks/magenta_concrete_powder",
            "minecraft:recipes/building_blocks/magenta_stained_glass",
            "minecraft:recipes/building_blocks/magenta_stained_hardened_clay",
            "minecraft:recipes/building_blocks/magenta_wool",
            "minecraft:recipes/building_blocks/magma",
            "minecraft:recipes/building_blocks/melon_block",
            "minecraft:recipes/building_blocks/mossy_cobblestone",
            "minecraft:recipes/building_blocks/mossy_stonebrick",
            "minecraft:recipes/building_blocks/nether_brick",
            "minecraft:recipes/building_blocks/nether_brick_slab",
            "minecraft:recipes/building_blocks/nether_brick_stairs",
            "minecraft:recipes/building_blocks/nether_wart_block",
            "minecraft:recipes/building_blocks/oak_planks",
            "minecraft:recipes/building_blocks/oak_stairs",
            "minecraft:recipes/building_blocks/oak_wooden_slab",
            "minecraft:recipes/building_blocks/orange_concrete_powder",
            "minecraft:recipes/building_blocks/orange_stained_glass",
            "minecraft:recipes/building_blocks/orange_stained_hardened_clay",
            "minecraft:recipes/building_blocks/orange_wool",
            "minecraft:recipes/building_blocks/pillar_quartz_block",
            "minecraft:recipes/building_blocks/pink_concrete_powder",
            "minecraft:recipes/building_blocks/pink_stained_glass",
            "minecraft:recipes/building_blocks/pink_stained_hardened_clay",
            "minecraft:recipes/building_blocks/pink_wool",
            "minecraft:recipes/building_blocks/polished_andesite",
            "minecraft:recipes/building_blocks/polished_diorite",
            "minecraft:recipes/building_blocks/polished_granite",
            "minecraft:recipes/building_blocks/prismarine",
            "minecraft:recipes/building_blocks/prismarine_bricks",
            "minecraft:recipes/building_blocks/purple_concrete_powder",
            "minecraft:recipes/building_blocks/purple_stained_glass",
            "minecraft:recipes/building_blocks/purple_stained_hardened_clay",
            "minecraft:recipes/building_blocks/purple_wool",
            "minecraft:recipes/building_blocks/purpur_block",
            "minecraft:recipes/building_blocks/purpur_pillar",
            "minecraft:recipes/building_blocks/purpur_slab",
            "minecraft:recipes/building_blocks/purpur_stairs",
            "minecraft:recipes/building_blocks/quartz_block",
            "minecraft:recipes/building_blocks/quartz_slab",
            "minecraft:recipes/building_blocks/quartz_stairs",
            "minecraft:recipes/building_blocks/red_concrete_powder",
            "minecraft:recipes/building_blocks/red_nether_brick",
            "minecraft:recipes/building_blocks/red_sandstone",
            "minecraft:recipes/building_blocks/red_sandstone_slab",
            "minecraft:recipes/building_blocks/red_sandstone_stairs",
            "minecraft:recipes/building_blocks/red_stained_glass",
            "minecraft:recipes/building_blocks/red_stained_hardened_clay",
            "minecraft:recipes/building_blocks/red_wool",
            "minecraft:recipes/building_blocks/sandstone",
            "minecraft:recipes/building_blocks/sandstone_slab",
            "minecraft:recipes/building_blocks/sandstone_stairs",
            "minecraft:recipes/building_blocks/sea_lantern",
            "minecraft:recipes/building_blocks/smooth_red_sandstone",
            "minecraft:recipes/building_blocks/smooth_sandstone",
            "minecraft:recipes/building_blocks/snow",
            "minecraft:recipes/building_blocks/spruce_planks",
            "minecraft:recipes/building_blocks/spruce_stairs",
            "minecraft:recipes/building_blocks/spruce_wooden_slab",
            "minecraft:recipes/building_blocks/stone_brick_slab",
            "minecraft:recipes/building_blocks/stone_brick_stairs",
            "minecraft:recipes/building_blocks/stone_slab",
            "minecraft:recipes/building_blocks/stone_stairs",
            "minecraft:recipes/building_blocks/stonebrick",
            "minecraft:recipes/building_blocks/string_to_wool",
            "minecraft:recipes/building_blocks/white_concrete_powder",
            "minecraft:recipes/building_blocks/white_stained_glass",
            "minecraft:recipes/building_blocks/white_stained_hardened_clay",
            "minecraft:recipes/building_blocks/yellow_concrete_powder",
            "minecraft:recipes/building_blocks/yellow_stained_glass",
            "minecraft:recipes/building_blocks/yellow_stained_hardened_clay",
            "minecraft:recipes/building_blocks/yellow_wool",
            "minecraft:recipes/combat/arrow",
            "minecraft:recipes/combat/bow",
            "minecraft:recipes/combat/diamond_boots",
            "minecraft:recipes/combat/diamond_chestplate",
            "minecraft:recipes/combat/diamond_helmet",
            "minecraft:recipes/combat/diamond_leggings",
            "minecraft:recipes/combat/diamond_sword",
            "minecraft:recipes/combat/golden_boots",
            "minecraft:recipes/combat/golden_chestplate",
            "minecraft:recipes/combat/golden_helmet",
            "minecraft:recipes/combat/golden_leggings",
            "minecraft:recipes/combat/golden_sword",
            "minecraft:recipes/combat/iron_boots",
            "minecraft:recipes/combat/iron_chestplate",
            "minecraft:recipes/combat/iron_helmet",
            "minecraft:recipes/combat/iron_leggings",
            "minecraft:recipes/combat/iron_sword",
            "minecraft:recipes/combat/leather_boots",
            "minecraft:recipes/combat/leather_chestplate",
            "minecraft:recipes/combat/leather_helmet",
            "minecraft:recipes/combat/leather_leggings",
            "minecraft:recipes/combat/shield",
            "minecraft:recipes/combat/spectral_arrow",
            "minecraft:recipes/combat/stone_sword",
            "minecraft:recipes/combat/wooden_sword",
            "minecraft:recipes/decorations/acacia_fence",
            "minecraft:recipes/decorations/anvil",
            "minecraft:recipes/decorations/armor_stand",
            "minecraft:recipes/decorations/birch_fence",
            "minecraft:recipes/decorations/black_banner",
            "minecraft:recipes/decorations/black_bed",
            "minecraft:recipes/decorations/black_bed_from_white_bed",
            "minecraft:recipes/decorations/black_carpet",
            "minecraft:recipes/decorations/black_stained_glass_pane",
            "minecraft:recipes/decorations/blue_banner",
            "minecraft:recipes/decorations/blue_bed",
            "minecraft:recipes/decorations/blue_bed_from_white_bed",
            "minecraft:recipes/decorations/blue_carpet",
            "minecraft:recipes/decorations/blue_stained_glass_pane",
            "minecraft:recipes/decorations/brown_banner",
            "minecraft:recipes/decorations/brown_bed",
            "minecraft:recipes/decorations/brown_bed_from_white_bed",
            "minecraft:recipes/decorations/brown_carpet",
            "minecraft:recipes/decorations/brown_stained_glass_pane",
            "minecraft:recipes/decorations/chest",
            "minecraft:recipes/decorations/cobblestone_wall",
            "minecraft:recipes/decorations/crafting_table",
            "minecraft:recipes/decorations/cyan_banner",
            "minecraft:recipes/decorations/cyan_bed",
            "minecraft:recipes/decorations/cyan_bed_from_white_bed",
            "minecraft:recipes/decorations/cyan_carpet",
            "minecraft:recipes/decorations/cyan_stained_glass_pane",
            "minecraft:recipes/decorations/dark_oak_fence",
            "minecraft:recipes/decorations/enchanting_table",
            "minecraft:recipes/decorations/end_crystal",
            "minecraft:recipes/decorations/end_rod",
            "minecraft:recipes/decorations/ender_chest",
            "minecraft:recipes/decorations/fence",
            "minecraft:recipes/decorations/flower_pot",
            "minecraft:recipes/decorations/furnace",
            "minecraft:recipes/decorations/glass_pane",
            "minecraft:recipes/decorations/gray_banner",
            "minecraft:recipes/decorations/gray_bed",
            "minecraft:recipes/decorations/gray_bed_from_white_bed",
            "minecraft:recipes/decorations/gray_carpet",
            "minecraft:recipes/decorations/gray_stained_glass_pane",
            "minecraft:recipes/decorations/green_banner",
            "minecraft:recipes/decorations/green_bed",
            "minecraft:recipes/decorations/green_bed_from_white_bed",
            "minecraft:recipes/decorations/green_carpet",
            "minecraft:recipes/decorations/green_stained_glass_pane",
            "minecraft:recipes/decorations/iron_bars",
            "minecraft:recipes/decorations/item_frame",
            "minecraft:recipes/decorations/jukebox",
            "minecraft:recipes/decorations/jungle_fence",
            "minecraft:recipes/decorations/ladder",
            "minecraft:recipes/decorations/light_blue_banner",
            "minecraft:recipes/decorations/light_blue_bed",
            "minecraft:recipes/decorations/light_blue_bed_from_white_bed",
            "minecraft:recipes/decorations/light_blue_carpet",
            "minecraft:recipes/decorations/light_blue_stained_glass_pane",
            "minecraft:recipes/decorations/light_gray_banner",
            "minecraft:recipes/decorations/light_gray_bed",
            "minecraft:recipes/decorations/light_gray_bed_from_white_bed",
            "minecraft:recipes/decorations/light_gray_carpet",
            "minecraft:recipes/decorations/light_gray_stained_glass_pane",
            "minecraft:recipes/decorations/lime_banner",
            "minecraft:recipes/decorations/lime_bed",
            "minecraft:recipes/decorations/lime_bed_from_white_bed",
            "minecraft:recipes/decorations/lime_carpet",
            "minecraft:recipes/decorations/lime_stained_glass_pane",
            "minecraft:recipes/decorations/magenta_banner",
            "minecraft:recipes/decorations/magenta_bed",
            "minecraft:recipes/decorations/magenta_bed_from_white_bed",
            "minecraft:recipes/decorations/magenta_carpet",
            "minecraft:recipes/decorations/magenta_stained_glass_pane",
            "minecraft:recipes/decorations/mossy_cobblestone_wall",
            "minecraft:recipes/decorations/nether_brick_fence",
            "minecraft:recipes/decorations/orange_banner",
            "minecraft:recipes/decorations/orange_bed",
            "minecraft:recipes/decorations/orange_bed_from_white_bed",
            "minecraft:recipes/decorations/orange_carpet",
            "minecraft:recipes/decorations/orange_stained_glass_pane",
            "minecraft:recipes/decorations/painting",
            "minecraft:recipes/decorations/pink_banner",
            "minecraft:recipes/decorations/pink_bed",
            "minecraft:recipes/decorations/pink_bed_from_white_bed",
            "minecraft:recipes/decorations/pink_carpet",
            "minecraft:recipes/decorations/pink_stained_glass_pane",
            "minecraft:recipes/decorations/purple_banner",
            "minecraft:recipes/decorations/purple_bed",
            "minecraft:recipes/decorations/purple_bed_from_white_bed",
            "minecraft:recipes/decorations/purple_carpet",
            "minecraft:recipes/decorations/purple_shulker_box",
            "minecraft:recipes/decorations/purple_stained_glass_pane",
            "minecraft:recipes/decorations/red_banner",
            "minecraft:recipes/decorations/red_bed",
            "minecraft:recipes/decorations/red_bed_from_white_bed",
            "minecraft:recipes/decorations/red_carpet",
            "minecraft:recipes/decorations/red_stained_glass_pane",
            "minecraft:recipes/decorations/sign",
            "minecraft:recipes/decorations/slime",
            "minecraft:recipes/decorations/snow_layer",
            "minecraft:recipes/decorations/spruce_fence",
            "minecraft:recipes/decorations/torch",
            "minecraft:recipes/decorations/white_banner",
            "minecraft:recipes/decorations/white_bed",
            "minecraft:recipes/decorations/white_carpet",
            "minecraft:recipes/decorations/white_stained_glass_pane",
            "minecraft:recipes/decorations/yellow_banner",
            "minecraft:recipes/decorations/yellow_bed",
            "minecraft:recipes/decorations/yellow_bed_from_white_bed",
            "minecraft:recipes/decorations/yellow_carpet",
            "minecraft:recipes/decorations/yellow_stained_glass_pane",
            "minecraft:recipes/food/beetroot_soup",
            "minecraft:recipes/food/bread",
            "minecraft:recipes/food/cake",
            "minecraft:recipes/food/cookie",
            "minecraft:recipes/food/golden_apple",
            "minecraft:recipes/food/mushroom_stew",
            "minecraft:recipes/food/pumpkin_pie",
            "minecraft:recipes/food/rabbit_stew_from_brown_mushroom",
            "minecraft:recipes/food/rabbit_stew_from_red_mushroom",
            "minecraft:recipes/misc/beacon",
            "minecraft:recipes/misc/bone_meal_from_block",
            "minecraft:recipes/misc/bone_meal_from_bone",
            "minecraft:recipes/misc/book",
            "minecraft:recipes/misc/bowl",
            "minecraft:recipes/misc/bucket",
            "minecraft:recipes/misc/coal",
            "minecraft:recipes/misc/cyan_dye",
            "minecraft:recipes/misc/diamond",
            "minecraft:recipes/misc/emerald",
            "minecraft:recipes/misc/ender_eye",
            "minecraft:recipes/misc/fire_charge",
            "minecraft:recipes/misc/gold_ingot_from_block",
            "minecraft:recipes/misc/gold_ingot_from_nuggets",
            "minecraft:recipes/misc/gold_nugget",
            "minecraft:recipes/misc/gray_dye",
            "minecraft:recipes/misc/iron_ingot_from_block",
            "minecraft:recipes/misc/iron_ingot_from_nuggets",
            "minecraft:recipes/misc/iron_nugget",
            "minecraft:recipes/misc/lapis_lazuli",
            "minecraft:recipes/misc/leather",
            "minecraft:recipes/misc/light_blue_dye_from_blue_orchid",
            "minecraft:recipes/misc/light_blue_dye_from_lapis_bonemeal",
            "minecraft:recipes/misc/light_gray_dye_from_azure_bluet",
            "minecraft:recipes/misc/light_gray_dye_from_gray_bonemeal",
            "minecraft:recipes/misc/light_gray_dye_from_ink_bonemeal",
            "minecraft:recipes/misc/light_gray_dye_from_oxeye_daisy",
            "minecraft:recipes/misc/light_gray_dye_from_white_tulip",
            "minecraft:recipes/misc/lime_dye",
            "minecraft:recipes/misc/magenta_dye_from_allium",
            "minecraft:recipes/misc/magenta_dye_from_lapis_ink_bonemeal",
            "minecraft:recipes/misc/magenta_dye_from_lapis_red_pink",
            "minecraft:recipes/misc/magenta_dye_from_lilac",
            "minecraft:recipes/misc/magenta_dye_from_purple_and_pink",
            "minecraft:recipes/misc/map",
            "minecraft:recipes/misc/melon_seeds",
            "minecraft:recipes/misc/orange_dye_from_orange_tulip",
            "minecraft:recipes/misc/orange_dye_from_red_yellow",
            "minecraft:recipes/misc/paper",
            "minecraft:recipes/misc/pink_dye_from_peony",
            "minecraft:recipes/misc/pink_dye_from_pink_tulip",
            "minecraft:recipes/misc/pink_dye_from_red_bonemeal",
            "minecraft:recipes/misc/pumpkin_seeds",
            "minecraft:recipes/misc/purple_dye",
            "minecraft:recipes/misc/red_dye_from_beetroot",
            "minecraft:recipes/misc/red_dye_from_poppy",
            "minecraft:recipes/misc/red_dye_from_rose_bush",
            "minecraft:recipes/misc/red_dye_from_tulip",
            "minecraft:recipes/misc/slime_ball",
            "minecraft:recipes/misc/stick",
            "minecraft:recipes/misc/sugar",
            "minecraft:recipes/misc/wheat",
            "minecraft:recipes/misc/writable_book",
            "minecraft:recipes/misc/yellow_dye_from_dandelion",
            "minecraft:recipes/misc/yellow_dye_from_sunflower",
            "minecraft:recipes/redstone/acacia_door",
            "minecraft:recipes/redstone/acacia_fence_gate",
            "minecraft:recipes/redstone/birch_door",
            "minecraft:recipes/redstone/birch_fence_gate",
            "minecraft:recipes/redstone/comparator",
            "minecraft:recipes/redstone/dark_oak_door",
            "minecraft:recipes/redstone/dark_oak_fence_gate",
            "minecraft:recipes/redstone/daylight_detector",
            "minecraft:recipes/redstone/dispenser",
            "minecraft:recipes/redstone/dropper",
            "minecraft:recipes/redstone/fence_gate",
            "minecraft:recipes/redstone/heavy_weighted_pressure_plate",
            "minecraft:recipes/redstone/hopper",
            "minecraft:recipes/redstone/iron_door",
            "minecraft:recipes/redstone/iron_trapdoor",
            "minecraft:recipes/redstone/jungle_door",
            "minecraft:recipes/redstone/jungle_fence_gate",
            "minecraft:recipes/redstone/lever",
            "minecraft:recipes/redstone/light_weighted_pressure_plate",
            "minecraft:recipes/redstone/noteblock",
            "minecraft:recipes/redstone/observer",
            "minecraft:recipes/redstone/piston",
            "minecraft:recipes/redstone/redstone",
            "minecraft:recipes/redstone/redstone_block",
            "minecraft:recipes/redstone/redstone_lamp",
            "minecraft:recipes/redstone/redstone_torch",
            "minecraft:recipes/redstone/repeater",
            "minecraft:recipes/redstone/spruce_door",
            "minecraft:recipes/redstone/spruce_fence_gate",
            "minecraft:recipes/redstone/sticky_piston",
            "minecraft:recipes/redstone/stone_button",
            "minecraft:recipes/redstone/stone_pressure_plate",
            "minecraft:recipes/redstone/tnt",
            "minecraft:recipes/redstone/trapdoor",
            "minecraft:recipes/redstone/trapped_chest",
            "minecraft:recipes/redstone/tripwire_hook",
            "minecraft:recipes/redstone/wooden_button",
            "minecraft:recipes/redstone/wooden_door",
            "minecraft:recipes/redstone/wooden_pressure_plate",
            "minecraft:recipes/root",
            "minecraft:recipes/tools/clock",
            "minecraft:recipes/tools/compass",
            "minecraft:recipes/tools/diamond_axe",
            "minecraft:recipes/tools/diamond_hoe",
            "minecraft:recipes/tools/diamond_pickaxe",
            "minecraft:recipes/tools/diamond_shovel",
            "minecraft:recipes/tools/fishing_rod",
            "minecraft:recipes/tools/flint_and_steel",
            "minecraft:recipes/tools/golden_axe",
            "minecraft:recipes/tools/golden_hoe",
            "minecraft:recipes/tools/golden_pickaxe",
            "minecraft:recipes/tools/golden_shovel",
            "minecraft:recipes/tools/iron_axe",
            "minecraft:recipes/tools/iron_hoe",
            "minecraft:recipes/tools/iron_pickaxe",
            "minecraft:recipes/tools/iron_shovel",
            "minecraft:recipes/tools/lead",
            "minecraft:recipes/tools/shears",
            "minecraft:recipes/tools/stone_axe",
            "minecraft:recipes/tools/stone_hoe",
            "minecraft:recipes/tools/stone_pickaxe",
            "minecraft:recipes/tools/stone_shovel",
            "minecraft:recipes/tools/wooden_axe",
            "minecraft:recipes/tools/wooden_hoe",
            "minecraft:recipes/tools/wooden_pickaxe",
            "minecraft:recipes/tools/wooden_shovel",
            "minecraft:recipes/transportation/acacia_boat",
            "minecraft:recipes/transportation/activator_rail",
            "minecraft:recipes/transportation/birch_boat",
            "minecraft:recipes/transportation/boat",
            "minecraft:recipes/transportation/carrot_on_a_stick",
            "minecraft:recipes/transportation/chest_minecart",
            "minecraft:recipes/transportation/dark_oak_boat",
            "minecraft:recipes/transportation/detector_rail",
            "minecraft:recipes/transportation/furnace_minecart",
            "minecraft:recipes/transportation/golden_rail",
            "minecraft:recipes/transportation/hopper_minecart",
            "minecraft:recipes/transportation/jungle_boat",
            "minecraft:recipes/transportation/minecart",
            "minecraft:recipes/transportation/rail",
            "minecraft:recipes/transportation/spruce_boat",
            "minecraft:recipes/transportation/tnt_minecart",
            "minecraft:story/cure_zombie_villager",
            "minecraft:story/deflect_arrow",
            "minecraft:story/enchant_item",
            "minecraft:story/enter_the_end",
            "minecraft:story/enter_the_nether",
            "minecraft:story/follow_ender_eye",
            "minecraft:story/form_obsidian",
            "minecraft:story/iron_tools",
            "minecraft:story/lava_bucket",
            "minecraft:story/mine_diamond",
            "minecraft:story/mine_stone",
            "minecraft:story/obtain_armor",
            "minecraft:story/root",
            "minecraft:story/shiny_gear",
            "minecraft:story/smelt_iron",
            "minecraft:story/upgrade_tools"
        ],
        "block": [
            "minecraft:acacia_bark",
            "minecraft:acacia_door",
            "minecraft:acacia_fence",
            "minecraft:acacia_leaves",
            "minecraft:acacia_log",
            "minecraft:acacia_planks",
            "minecraft:acacia_sapling",
            "minecraft:acacia_sapling_flower_pot",
            "minecraft:acacia_slab",
            "minecraft:acacia_stairs",
            "minecraft:activator_rail",
            "minecraft:air",
            "minecraft:allium",
            "minecraft:allium_flower_pot",
            "minecraft:andesite",
            "minecraft:anvil",
            "minecraft:azure_bluet",
            "minecraft:azure_bluet_flower_pot",
            "minecraft:banner",
            "minecraft:barrier",
            "minecraft:beacon",
            "minecraft:bed",
            "minecraft:bedrock",
            "minecraft:beetroots",
            "minecraft:birch_bark",
            "minecraft:birch_door",
            "minecraft:birch_fence",
            "minecraft:birch_fence_gate",
            "minecraft:birch_leaves",
            "minecraft:birch_log",
            "minecraft:birch_planks",
            "minecraft:birch_sapling",
            "minecraft:birch_sapling_flower_pot",
            "minecraft:birch_slab",
            "minecraft:birch_stairs",
            "minecraft:black_carpet",
            "minecraft:black_concrete",
            "minecraft:black_concrete_powder",
            "minecraft:black_glazed_terracotta",
            "minecraft:black_shulker_box",
            "minecraft:black_stained_glass",
            "minecraft:black_stained_glass_pane",
            "minecraft:black_terracotta",
            "minecraft:black_wool",
            "minecraft:blue_carpet",
            "minecraft:blue_concrete",
            "minecraft:blue_concrete_powder",
            "minecraft:blue_glazed_terracotta",
            "minecraft:blue_orchid",
            "minecraft:blue_orchid_flower_pot",
            "minecraft:blue_shulker_box",
            "minecraft:blue_stained_glass",
            "minecraft:blue_stained_glass_pane",
            "minecraft:blue_terracotta",
            "minecraft:blue_wool",
            "minecraft:bone_block",
            "minecraft:bookshelf",
            "minecraft:brewing_stand",
            "minecraft:brick_slab",
            "minecraft:brick_stairs",
            "minecraft:bricks",
            "minecraft:brown_carpet",
            "minecraft:brown_concrete",
            "minecraft:brown_concrete_powder",
            "minecraft:brown_glazed_terracotta",
            "minecraft:brown_mushroom",
            "minecraft:brown_mushroom_block",
            "minecraft:brown_mushroom_flower_pot",
            "minecraft:brown_shulker_box",
            "minecraft:brown_stained_glass",
            "minecraft:brown_stained_glass_pane",
            "minecraft:brown_terracotta",
            "minecraft:brown_wool",
            "minecraft:cactus",
            "minecraft:cactus_flower_pot",
            "minecraft:cake",
            "minecraft:carrots",
            "minecraft:cauldron",
            "minecraft:chain_command_block",
            "minecraft:chest",
            "minecraft:chipped_anvil",
            "minecraft:chiseled_quartz",
            "minecraft:chiseled_red_sandstone",
            "minecraft:chiseled_sandstone",
            "minecraft:chiseled_stone_bricks",
            "minecraft:chorus_flower",
            "minecraft:chorus_plant",
            "minecraft:clay",
            "minecraft:coal_block",
            "minecraft:coal_ore",
            "minecraft:coarse_dirt",
            "minecraft:cobblestone",
            "minecraft:cobblestone_slab",
            "minecraft:cobblestone_stairs",
            "minecraft:cobblestone_wall",
            "minecraft:cobweb",
            "minecraft:cocoa",
            "minecraft:command_block",
            "minecraft:comparator",
            "minecraft:cracked_stone_bricks",
            "minecraft:crafting_table",
            "minecraft:creeper_head",
            "minecraft:cut_red_sandstone",
            "minecraft:cut_sandstone",
            "minecraft:cyan_carpet",
            "minecraft:cyan_concrete",
            "minecraft:cyan_concrete_powder",
            "minecraft:cyan_glazed_terracotta",
            "minecraft:cyan_shulker_box",
            "minecraft:cyan_stained_glass",
            "minecraft:cyan_stained_glass_pane",
            "minecraft:cyan_terracotta",
            "minecraft:cyan_wool",
            "minecraft:damaged_anvil",
            "minecraft:dandelion",
            "minecraft:dandelion_flower_pot",
            "minecraft:dark_oak_bark",
            "minecraft:dark_oak_door",
            "minecraft:dark_oak_fence",
            "minecraft:dark_oak_fence_gate",
            "minecraft:dark_oak_leaves",
            "minecraft:dark_oak_log",
            "minecraft:dark_oak_planks",
            "minecraft:dark_oak_sapling",
            "minecraft:dark_oak_sapling_flower_pot",
            "minecraft:dark_oak_slab",
            "minecraft:dark_oak_stairs",
            "minecraft:dark_prismarine",
            "minecraft:daylight_detector",
            "minecraft:dead_bush",
            "minecraft:dead_bush_flower_pot",
            "minecraft:detector_rail",
            "minecraft:diamond_block",
            "minecraft:diamond_ore",
            "minecraft:diorite",
            "minecraft:dirt",
            "minecraft:dispenser",
            "minecraft:dragon_egg",
            "minecraft:dragon_head",
            "minecraft:dropper",
            "minecraft:emerald_block",
            "minecraft:emerald_ore",
            "minecraft:enchanting_table",
            "minecraft:end_gateway",
            "minecraft:end_portal",
            "minecraft:end_portal_frame",
            "minecraft:end_rod",
            "minecraft:end_stone",
            "minecraft:end_stone_bricks",
            "minecraft:ender_chest",
            "minecraft:farmland",
            "minecraft:fern",
            "minecraft:fern_flower_pot",
            "minecraft:fire",
            "minecraft:flower_pot",
            "minecraft:flowing_lava",
            "minecraft:flowing_water",
            "minecraft:frosted_ice",
            "minecraft:furnace",
            "minecraft:glass",
            "minecraft:glass_pane",
            "minecraft:glowstone",
            "minecraft:gold_block",
            "minecraft:gold_ore",
            "minecraft:granite",
            "minecraft:grass",
            "minecraft:grass_block",
            "minecraft:grass_path",
            "minecraft:gravel",
            "minecraft:gray_carpet",
            "minecraft:gray_concrete",
            "minecraft:gray_concrete_powder",
            "minecraft:gray_glazed_terracotta",
            "minecraft:gray_shulker_box",
            "minecraft:gray_stained_glass",
            "minecraft:gray_stained_glass_pane",
            "minecraft:gray_terracotta",
            "minecraft:gray_wool",
            "minecraft:green_carpet",
            "minecraft:green_concrete",
            "minecraft:green_concrete_powder",
            "minecraft:green_glazed_terracotta",
            "minecraft:green_shulker_box",
            "minecraft:green_stained_glass",
            "minecraft:green_stained_glass_pane",
            "minecraft:green_terracotta",
            "minecraft:green_wool",
            "minecraft:hay_bale",
            "minecraft:heavy_weighted_pressure_plate",
            "minecraft:hopper",
            "minecraft:ice",
            "minecraft:infested_chiseled_stone_bricks",
            "minecraft:infested_cobblestone",
            "minecraft:infested_cracked_stone_bricks",
            "minecraft:infested_mossy_stone_bricks",
            "minecraft:infested_stone",
            "minecraft:infested_stone_bricks",
            "minecraft:iron_bars",
            "minecraft:iron_block",
            "minecraft:iron_door",
            "minecraft:iron_ore",
            "minecraft:iron_trapdoor",
            "minecraft:jack_o_lantern",
            "minecraft:jukebox",
            "minecraft:jungle_bark",
            "minecraft:jungle_door",
            "minecraft:jungle_fence",
            "minecraft:jungle_fence_gate",
            "minecraft:jungle_leaves",
            "minecraft:jungle_log",
            "minecraft:jungle_planks",
            "minecraft:jungle_sapling",
            "minecraft:jungle_sapling_flower_pot",
            "minecraft:jungle_slab",
            "minecraft:jungle_stairs",
            "minecraft:ladder",
            "minecraft:lapis_block",
            "minecraft:lapis_ore",
            "minecraft:large_fern",
            "minecraft:lava",
            "minecraft:lever",
            "minecraft:light_blue_carpet",
            "minecraft:light_blue_concrete",
            "minecraft:light_blue_concrete_powder",
            "minecraft:light_blue_glazed_terracotta",
            "minecraft:light_blue_shulker_box",
            "minecraft:light_blue_stained_glass",
            "minecraft:light_blue_stained_glass_pane",
            "minecraft:light_blue_terracotta",
            "minecraft:light_blue_wool",
            "minecraft:light_gray_carpet",
            "minecraft:light_gray_concrete",
            "minecraft:light_gray_concrete_powder",
            "minecraft:light_gray_glazed_terracotta",
            "minecraft:light_gray_shulker_box",
            "minecraft:light_gray_stained_glass",
            "minecraft:light_gray_stained_glass_pane",
            "minecraft:light_gray_terracotta",
            "minecraft:light_gray_wool",
            "minecraft:light_weighted_pressure_plate",
            "minecraft:lilac",
            "minecraft:lily_pad",
            "minecraft:lime_carpet",
            "minecraft:lime_concrete",
            "minecraft:lime_concrete_powder",
            "minecraft:lime_glazed_terracotta",
            "minecraft:lime_shulker_box",
            "minecraft:lime_stained_glass",
            "minecraft:lime_stained_glass_pane",
            "minecraft:lime_terracotta",
            "minecraft:lime_wool",
            "minecraft:magenta_carpet",
            "minecraft:magenta_concrete",
            "minecraft:magenta_concrete_powder",
            "minecraft:magenta_glazed_terracotta",
            "minecraft:magenta_shulker_box",
            "minecraft:magenta_stained_glass",
            "minecraft:magenta_stained_glass_pane",
            "minecraft:magenta_terracotta",
            "minecraft:magenta_wool",
            "minecraft:magma_block",
            "minecraft:melon_block",
            "minecraft:melon_plant",
            "minecraft:melon_stem",
            "minecraft:mob_spawner",
            "minecraft:mossy_cobblestone",
            "minecraft:mossy_cobblestone_wall",
            "minecraft:mossy_stone_bricks",
            "minecraft:mycelium",
            "minecraft:nether_brick_fence",
            "minecraft:nether_brick_slab",
            "minecraft:nether_brick_stairs",
            "minecraft:nether_bricks",
            "minecraft:nether_portal",
            "minecraft:nether_quartz_ore",
            "minecraft:nether_wart",
            "minecraft:nether_wart_block",
            "minecraft:netherrack",
            "minecraft:note_block",
            "minecraft:oak_bark",
            "minecraft:oak_door",
            "minecraft:oak_fence",
            "minecraft:oak_fence_gate",
            "minecraft:oak_leaves",
            "minecraft:oak_log",
            "minecraft:oak_planks",
            "minecraft:oak_sapling",
            "minecraft:oak_sapling_flower_pot",
            "minecraft:oak_slab",
            "minecraft:oak_stairs",
            "minecraft:observer",
            "minecraft:obsidian",
            "minecraft:orange_carpet",
            "minecraft:orange_concrete",
            "minecraft:orange_concrete_powder",
            "minecraft:orange_glazed_terracotta",
            "minecraft:orange_shulker_box",
            "minecraft:orange_stained_glass",
            "minecraft:orange_stained_glass_pane",
            "minecraft:orange_terracotta",
            "minecraft:orange_tulip",
            "minecraft:orange_tulip_flower_pot",
            "minecraft:orange_wool",
            "minecraft:oxeye_daisy",
            "minecraft:oxeye_daisy_flower_pot",
            "minecraft:packed_ice",
            "minecraft:peony",
            "minecraft:petrified_oak_slab",
            "minecraft:pink_carpet",
            "minecraft:pink_concrete",
            "minecraft:pink_concrete_powder",
            "minecraft:pink_glazed_terracotta",
            "minecraft:pink_shulker_box",
            "minecraft:pink_stained_glass",
            "minecraft:pink_stained_glass_pane",
            "minecraft:pink_terracotta",
            "minecraft:pink_tulip",
            "minecraft:pink_tulip_flower_pot",
            "minecraft:pink_wool",
            "minecraft:piston",
            "minecraft:piston_extension",
            "minecraft:piston_head",
            "minecraft:player_head",
            "minecraft:podzol",
            "minecraft:polished_andesite",
            "minecraft:polished_diorite",
            "minecraft:polished_granite",
            "minecraft:poppy",
            "minecraft:poppy_flower_pot",
            "minecraft:potatoes",
            "minecraft:powered_rail",
            "minecraft:prismarine",
            "minecraft:prismarine_bricks",
            "minecraft:pumpkin",
            "minecraft:pumpkin_plant",
            "minecraft:pumpkin_stem",
            "minecraft:purple_carpet",
            "minecraft:purple_concrete",
            "minecraft:purple_concrete_powder",
            "minecraft:purple_glazed_terracotta",
            "minecraft:purple_shulker_box",
            "minecraft:purple_stained_glass",
            "minecraft:purple_stained_glass_pane",
            "minecraft:purple_terracotta",
            "minecraft:purple_wool",
            "minecraft:purpur_block",
            "minecraft:purpur_pillar",
            "minecraft:purpur_slab",
            "minecraft:purpur_stairs",
            "minecraft:quartz_block",
            "minecraft:quartz_pillar",
            "minecraft:quartz_slab",
            "minecraft:quartz_stairs",
            "minecraft:rail",
            "minecraft:red_carpet",
            "minecraft:red_concrete",
            "minecraft:red_concrete_powder",
            "minecraft:red_glazed_terracotta",
            "minecraft:red_mushroom",
            "minecraft:red_mushroom_block",
            "minecraft:red_mushroom_flower_pot",
            "minecraft:red_nether_bricks",
            "minecraft:red_sand",
            "minecraft:red_sandstone",
            "minecraft:red_sandstone_slab",
            "minecraft:red_sandstone_stairs",
            "minecraft:red_shulker_box",
            "minecraft:red_stained_glass",
            "minecraft:red_stained_glass_pane",
            "minecraft:red_terracotta",
            "minecraft:red_tulip",
            "minecraft:red_tulip_flower_pot",
            "minecraft:red_wool",
            "minecraft:redstone_block",
            "minecraft:redstone_lamp",
            "minecraft:redstone_ore",
            "minecraft:redstone_torch",
            "minecraft:redstone_wire",
            "minecraft:repeater",
            "minecraft:repeating_command_block",
            "minecraft:rose_bush",
            "minecraft:sand",
            "minecraft:sandstone",
            "minecraft:sandstone_slab",
            "minecraft:sandstone_stairs",
            "minecraft:sea_lantern",
            "minecraft:sign",
            "minecraft:skeleton_skull",
            "minecraft:slime_block",
            "minecraft:smooth_red_sandstone",
            "minecraft:smooth_sandstone",
            "minecraft:smooth_stone",
            "minecraft:snow",
            "minecraft:snow_block",
            "minecraft:soul_sand",
            "minecraft:sponge",
            "minecraft:spruce_bark",
            "minecraft:spruce_door",
            "minecraft:spruce_fence",
            "minecraft:spruce_fence_gate",
            "minecraft:spruce_leaves",
            "minecraft:spruce_log",
            "minecraft:spruce_planks",
            "minecraft:spruce_sapling",
            "minecraft:spruce_sapling_flower_pot",
            "minecraft:spruce_slab",
            "minecraft:spruce_stairs",
            "minecraft:sticky_piston",
            "minecraft:stone",
            "minecraft:stone_brick_slab",
            "minecraft:stone_brick_stairs",
            "minecraft:stone_bricks",
            "minecraft:stone_button",
            "minecraft:stone_pressure_plate",
            "minecraft:stone_slab",
            "minecraft:structure_block",
            "minecraft:structure_void",
            "minecraft:sugar_cane",
            "minecraft:sunflower",
            "minecraft:tall_grass",
            "minecraft:terracotta",
            "minecraft:tnt",
            "minecraft:torch",
            "minecraft:trapped_chest",
            "minecraft:tripwire",
            "minecraft:tripwire_hook",
            "minecraft:vine",
            "minecraft:wall_banner",
            "minecraft:wall_creeper_head",
            "minecraft:wall_dragon_head",
            "minecraft:wall_player_head",
            "minecraft:wall_redstone_torch",
            "minecraft:wall_sign",
            "minecraft:wall_skeleton_skull",
            "minecraft:wall_torch",
            "minecraft:wall_wither_skeleton_skull",
            "minecraft:wall_zombie_head",
            "minecraft:water",
            "minecraft:wet_sponge",
            "minecraft:wheat",
            "minecraft:white_carpet",
            "minecraft:white_concrete",
            "minecraft:white_concrete_powder",
            "minecraft:white_glazed_terracotta",
            "minecraft:white_shulker_box",
            "minecraft:white_stained_glass",
            "minecraft:white_stained_glass_pane",
            "minecraft:white_terracotta",
            "minecraft:white_tulip",
            "minecraft:white_tulip_flower_pot",
            "minecraft:white_wool",
            "minecraft:wither_skeleton_skull",
            "minecraft:wooden_button",
            "minecraft:wooden_pressure_plate",
            "minecraft:wooden_trapdoor",
            "minecraft:yellow_carpet",
            "minecraft:yellow_concrete",
            "minecraft:yellow_concrete_powder",
            "minecraft:yellow_glazed_terracotta",
            "minecraft:yellow_shulker_box",
            "minecraft:yellow_stained_glass",
            "minecraft:yellow_stained_glass_pane",
            "minecraft:yellow_terracotta",
            "minecraft:yellow_wool",
            "minecraft:zombie_head"
        ],
        "effect": [
            "minecraft:speed",
            "minecraft:slowness",
            "minecraft:haste",
            "minecraft:mining_fatigue",
            "minecraft:strength",
            "minecraft:instant_health",
            "minecraft:instant_damage",
            "minecraft:jump_boost",
            "minecraft:nausea",
            "minecraft:regeneration",
            "minecraft:resistance",
            "minecraft:fire_resistence",
            "minecraft:water_breathing",
            "minecraft:invisibility",
            "minecraft:blindness",
            "minecraft:night_vision",
            "minecraft:hunger",
            "minecraft:weakness",
            "minecraft:poison",
            "minecraft:wither",
            "minecraft:health_boost",
            "minecraft:absorbtion",
            "minecraft:saturation",
            "minecraft:glowing",
            "minecraft:levitation",
            "minecraft:luck",
            "minecraft:unluck"
        ],
        "enchantment": [
            "minecraft:protection",
            "minecraft:fire_protection",
            "minecraft:feather_falling",
            "minecraft:blast_protection",
            "minecraft:projectile_protection",
            "minecraft:respiration",
            "minecraft:aqua_affinity",
            "minecraft:throns",
            "minecraft:depth_strider",
            "minecraft:frost_walker",
            "minecraft:binding_curse",
            "minecraft:sharpness",
            "minecraft:smite",
            "minecraft:bane_of_arthropods",
            "minecraft:knockback",
            "minecraft:fire_aspect",
            "minecraft:looting",
            "minecraft:sweeping",
            "minecraft:efficiency",
            "minecraft:silk_touch",
            "minecraft:unbreaking",
            "minecraft:fortune",
            "minecraft:power",
            "minecraft:punch",
            "minecraft:flame",
            "minecraft:infinity",
            "minecraft:luck_of_the_sea",
            "minecraft:lure",
            "minecraft:mending",
            "minecraft:vanishing_curse"
        ],
        "entity": [
            "minecraft:area_effect_cloud",
            "minecraft:armor_stand",
            "minecraft:arrow",
            "minecraft:bat",
            "minecraft:blaze",
            "minecraft:boat",
            "minecraft:cave_spider",
            "minecraft:chest_minecart",
            "minecraft:chicken",
            "minecraft:commandblock_minecart",
            "minecraft:cow",
            "minecraft:creeper",
            "minecraft:donkey",
            "minecraft:dragon_fireball",
            "minecraft:egg",
            "minecraft:elder_guardian",
            "minecraft:ender_crystal",
            "minecraft:ender_dragon",
            "minecraft:ender_pearl",
            "minecraft:enderman",
            "minecraft:endermite",
            "minecraft:evocation_fangs",
            "minecraft:evocation_illager",
            "minecraft:eye_of_ender_signal",
            "minecraft:falling_block",
            "minecraft:fireball",
            "minecraft:fireworks_rocket",
            "minecraft:furnace_minecart",
            "minecraft:ghast",
            "minecraft:giant",
            "minecraft:guardian",
            "minecraft:hopper_minecart",
            "minecraft:horse",
            "minecraft:husk",
            "minecraft:illusion_illager",
            "minecraft:item",
            "minecraft:item_frame",
            "minecraft:leash_knot",
            "minecraft:lightning_bolt",
            "minecraft:llama",
            "minecraft:llama_spit",
            "minecraft:magma_cube",
            "minecraft:minecart",
            "minecraft:mooshroom",
            "minecraft:mule",
            "minecraft:ocelot",
            "minecraft:painting",
            "minecraft:parrot",
            "minecraft:pig",
            "minecraft:polar_bear",
            "minecraft:potion",
            "minecraft:rabbit",
            "minecraft:sheep",
            "minecraft:shulker",
            "minecraft:shulker_bullet",
            "minecraft:silverfish",
            "minecraft:skeleton",
            "minecraft:skeleton_horse",
            "minecraft:slime",
            "minecraft:small_fireball",
            "minecraft:snowball",
            "minecraft:snowman",
            "minecraft:spawner_minecart",
            "minecraft:spectral_arrow",
            "minecraft:spider",
            "minecraft:squid",
            "minecraft:stray",
            "minecraft:tnt",
            "minecraft:tnt_minecart",
            "minecraft:vex",
            "minecraft:villager",
            "minecraft:villager_golem",
            "minecraft:vindication_illager",
            "minecraft:witch",
            "minecraft:wither",
            "minecraft:wither_skeleton",
            "minecraft:wither_skull",
            "minecraft:wolf",
            "minecraft:xp_bottle",
            "minecraft:xp_orb",
            "minecraft:zombie",
            "minecraft:zombie_horse",
            "minecraft:zombie_pigman",
            "minecraft:zombie_villager"
        ],
        "item": [
            "minecraft:acacia_boat",
            "minecraft:acacia_door",
            "minecraft:acacia_fence",
            "minecraft:acacia_fence_gate",
            "minecraft:acacia_stairs",
            "minecraft:activator_rail",
            "minecraft:air",
            "minecraft:apple",
            "minecraft:armor_stand",
            "minecraft:arrow",
            "minecraft:baked_potato",
            "minecraft:banner",
            "minecraft:barrier",
            "minecraft:beacon",
            "minecraft:bedrock",
            "minecraft:beef",
            "minecraft:beetroot",
            "minecraft:beetroot_seeds",
            "minecraft:beetroot_soup",
            "minecraft:birch_boat",
            "minecraft:birch_door",
            "minecraft:birch_fence",
            "minecraft:birch_fence_gate",
            "minecraft:birch_stairs",
            "minecraft:black_glazed_terracotta",
            "minecraft:black_shulker_box",
            "minecraft:blaze_powder",
            "minecraft:blaze_rod",
            "minecraft:blue_glazed_terracotta",
            "minecraft:blue_shulker_box",
            "minecraft:bone",
            "minecraft:bone_block",
            "minecraft:book",
            "minecraft:bookshelf",
            "minecraft:bow",
            "minecraft:bowl",
            "minecraft:bread",
            "minecraft:brewing_stand",
            "minecraft:brick",
            "minecraft:brick_stairs",
            "minecraft:brown_glazed_terracotta",
            "minecraft:brown_mushroom",
            "minecraft:brown_mushroom_block",
            "minecraft:brown_shulker_box",
            "minecraft:bucket",
            "minecraft:cactus",
            "minecraft:cake",
            "minecraft:carpet",
            "minecraft:carrot",
            "minecraft:carrot_on_a_stick",
            "minecraft:cauldron",
            "minecraft:chain_command_block",
            "minecraft:chainmail_boots",
            "minecraft:chainmail_chestplate",
            "minecraft:chainmail_helmet",
            "minecraft:chainmail_leggings",
            "minecraft:chest",
            "minecraft:chest_minecart",
            "minecraft:chicken",
            "minecraft:chorus_flower",
            "minecraft:chorus_fruit",
            "minecraft:chorus_fruit_popped",
            "minecraft:chorus_plant",
            "minecraft:clay",
            "minecraft:clay_ball",
            "minecraft:clock",
            "minecraft:coal",
            "minecraft:coal_block",
            "minecraft:coal_ore",
            "minecraft:cobblestone",
            "minecraft:cobblestone_wall",
            "minecraft:command_block",
            "minecraft:command_block_minecart",
            "minecraft:comparator",
            "minecraft:compass",
            "minecraft:cooked_beef",
            "minecraft:cooked_chicken",
            "minecraft:cooked_fish",
            "minecraft:cooked_mutton",
            "minecraft:cooked_porkchop",
            "minecraft:cooked_rabbit",
            "minecraft:cookie",
            "minecraft:crafting_table",
            "minecraft:cyan_glazed_terracotta",
            "minecraft:cyan_shulker_box",
            "minecraft:dark_oak_boat",
            "minecraft:dark_oak_door",
            "minecraft:dark_oak_fence",
            "minecraft:dark_oak_fence_gate",
            "minecraft:dark_oak_stairs",
            "minecraft:daylight_detector",
            "minecraft:detector_rail",
            "minecraft:diamond",
            "minecraft:diamond_axe",
            "minecraft:diamond_block",
            "minecraft:diamond_boots",
            "minecraft:diamond_chestplate",
            "minecraft:diamond_helmet",
            "minecraft:diamond_hoe",
            "minecraft:diamond_horse_armor",
            "minecraft:diamond_leggings",
            "minecraft:diamond_ore",
            "minecraft:diamond_pickaxe",
            "minecraft:diamond_shovel",
            "minecraft:diamond_sword",
            "minecraft:dispenser",
            "minecraft:dragon_breath",
            "minecraft:dragon_egg",
            "minecraft:dropper",
            "minecraft:egg",
            "minecraft:elytra",
            "minecraft:emerald",
            "minecraft:emerald_block",
            "minecraft:emerald_ore",
            "minecraft:enchanted_book",
            "minecraft:enchanting_table",
            "minecraft:end_portal_frame",
            "minecraft:end_rod",
            "minecraft:end_stone",
            "minecraft:ender_chest",
            "minecraft:ender_eye",
            "minecraft:ender_pearl",
            "minecraft:farmland",
            "minecraft:feather",
            "minecraft:fermented_spider_eye",
            "minecraft:filled_map",
            "minecraft:fire_charge",
            "minecraft:firework_charge",
            "minecraft:fireworks",
            "minecraft:fishing_rod",
            "minecraft:flint",
            "minecraft:flint_and_steel",
            "minecraft:flower_pot",
            "minecraft:furnace",
            "minecraft:furnace_minecart",
            "minecraft:ghast_tear",
            "minecraft:glass",
            "minecraft:glass_bottle",
            "minecraft:glass_pane",
            "minecraft:glowstone",
            "minecraft:glowstone_dust",
            "minecraft:gold_block",
            "minecraft:gold_ingot",
            "minecraft:gold_nugget",
            "minecraft:gold_ore",
            "minecraft:golden_apple",
            "minecraft:golden_axe",
            "minecraft:golden_boots",
            "minecraft:golden_carrot",
            "minecraft:golden_chestplate",
            "minecraft:golden_helmet",
            "minecraft:golden_hoe",
            "minecraft:golden_horse_armor",
            "minecraft:golden_leggings",
            "minecraft:golden_pickaxe",
            "minecraft:golden_shovel",
            "minecraft:golden_sword",
            "minecraft:grass_path",
            "minecraft:gravel",
            "minecraft:gray_glazed_terracotta",
            "minecraft:gray_shulker_box",
            "minecraft:green_glazed_terracotta",
            "minecraft:green_shulker_box",
            "minecraft:gunpowder",
            "minecraft:heavy_weighted_pressure_plate",
            "minecraft:hopper",
            "minecraft:hopper_minecart",
            "minecraft:ice",
            "minecraft:iron_axe",
            "minecraft:iron_bars",
            "minecraft:iron_block",
            "minecraft:iron_boots",
            "minecraft:iron_chestplate",
            "minecraft:iron_door",
            "minecraft:iron_helmet",
            "minecraft:iron_hoe",
            "minecraft:iron_horse_armor",
            "minecraft:iron_ingot",
            "minecraft:iron_leggings",
            "minecraft:iron_nugget",
            "minecraft:iron_ore",
            "minecraft:iron_pickaxe",
            "minecraft:iron_shovel",
            "minecraft:iron_sword",
            "minecraft:iron_trapdoor",
            "minecraft:item_frame",
            "minecraft:jukebox",
            "minecraft:jungle_boat",
            "minecraft:jungle_door",
            "minecraft:jungle_fence",
            "minecraft:jungle_fence_gate",
            "minecraft:jungle_stairs",
            "minecraft:knowledge_book",
            "minecraft:ladder",
            "minecraft:lapis_block",
            "minecraft:lapis_ore",
            "minecraft:lava_bucket",
            "minecraft:lead",
            "minecraft:leather",
            "minecraft:leather_boots",
            "minecraft:leather_chestplate",
            "minecraft:leather_helmet",
            "minecraft:leather_leggings",
            "minecraft:lever",
            "minecraft:light_blue_glazed_terracotta",
            "minecraft:light_blue_shulker_box",
            "minecraft:light_weighted_pressure_plate",
            "minecraft:lime_glazed_terracotta",
            "minecraft:lime_shulker_box",
            "minecraft:lingering_potion",
            "minecraft:magenta_glazed_terracotta",
            "minecraft:magenta_shulker_box",
            "minecraft:magma_cream",
            "minecraft:map",
            "minecraft:melon",
            "minecraft:melon_block",
            "minecraft:melon_seeds",
            "minecraft:milk_bucket",
            "minecraft:minecart",
            "minecraft:mob_spawner",
            "minecraft:mossy_cobblestone",
            "minecraft:mushroom_stew",
            "minecraft:mutton",
            "minecraft:mycelium",
            "minecraft:name_tag",
            "minecraft:nether_brick_fence",
            "minecraft:nether_brick_stairs",
            "minecraft:nether_star",
            "minecraft:nether_wart",
            "minecraft:nether_wart_block",
            "minecraft:netherrack",
            "minecraft:oak_stairs",
            "minecraft:observer",
            "minecraft:obsidian",
            "minecraft:orange_glazed_terracotta",
            "minecraft:orange_shulker_box",
            "minecraft:packed_ice",
            "minecraft:painting",
            "minecraft:paper",
            "minecraft:pink_glazed_terracotta",
            "minecraft:pink_shulker_box",
            "minecraft:piston",
            "minecraft:poisonous_potato",
            "minecraft:porkchop",
            "minecraft:potato",
            "minecraft:potion",
            "minecraft:prismarine",
            "minecraft:prismarine_crystals",
            "minecraft:prismarine_shard",
            "minecraft:pumpkin",
            "minecraft:pumpkin_pie",
            "minecraft:pumpkin_seeds",
            "minecraft:purple_glazed_terracotta",
            "minecraft:purple_shulker_box",
            "minecraft:purpur_block",
            "minecraft:purpur_pillar",
            "minecraft:purpur_slab",
            "minecraft:purpur_stairs",
            "minecraft:quartz",
            "minecraft:quartz_block",
            "minecraft:quartz_stairs",
            "minecraft:rabbit",
            "minecraft:rabbit_foot",
            "minecraft:rabbit_hide",
            "minecraft:rabbit_stew",
            "minecraft:rail",
            "minecraft:record_11",
            "minecraft:record_13",
            "minecraft:record_blocks",
            "minecraft:record_cat",
            "minecraft:record_chirp",
            "minecraft:record_far",
            "minecraft:record_mall",
            "minecraft:record_mellohi",
            "minecraft:record_stal",
            "minecraft:record_strad",
            "minecraft:record_wait",
            "minecraft:record_ward",
            "minecraft:red_glazed_terracotta",
            "minecraft:red_mushroom",
            "minecraft:red_mushroom_block",
            "minecraft:red_sandstone",
            "minecraft:red_sandstone_stairs",
            "minecraft:red_shulker_box",
            "minecraft:redstone_block",
            "minecraft:redstone_lamp",
            "minecraft:redstone_ore",
            "minecraft:redstone_torch",
            "minecraft:repeater",
            "minecraft:repeating_command_block",
            "minecraft:rotten_flesh",
            "minecraft:saddle",
            "minecraft:sandstone_stairs",
            "minecraft:sea_lantern",
            "minecraft:shears",
            "minecraft:shield",
            "minecraft:shulker_shell",
            "minecraft:sign",
            "minecraft:snow",
            "minecraft:snowball",
            "minecraft:soul_sand",
            "minecraft:spawn_egg",
            "minecraft:spectral_arrow",
            "minecraft:spider_eye",
            "minecraft:splash_potion",
            "minecraft:spruce_boat",
            "minecraft:spruce_door",
            "minecraft:spruce_fence",
            "minecraft:spruce_fence_gate",
            "minecraft:spruce_stairs",
            "minecraft:stained_glass_pane",
            "minecraft:stained_hardened_clay",
            "minecraft:stick",
            "minecraft:sticky_piston",
            "minecraft:stone_axe",
            "minecraft:stone_brick_stairs",
            "minecraft:stone_button",
            "minecraft:stone_hoe",
            "minecraft:stone_pickaxe",
            "minecraft:stone_pressure_plate",
            "minecraft:stone_shovel",
            "minecraft:stone_sword",
            "minecraft:string",
            "minecraft:structure_block",
            "minecraft:structure_void",
            "minecraft:sugar",
            "minecraft:tipped_arrow",
            "minecraft:tnt",
            "minecraft:tnt_minecart",
            "minecraft:torch",
            "minecraft:totem_of_undying",
            "minecraft:trapped_chest",
            "minecraft:tripwire_hook",
            "minecraft:vine",
            "minecraft:water_bucket",
            "minecraft:wheat",
            "minecraft:wheat_seeds",
            "minecraft:white_glazed_terracotta",
            "minecraft:white_shulker_box",
            "minecraft:wooden_axe",
            "minecraft:wooden_button",
            "minecraft:wooden_hoe",
            "minecraft:wooden_pickaxe",
            "minecraft:wooden_pressure_plate",
            "minecraft:wooden_shovel",
            "minecraft:wooden_sword",
            "minecraft:written_book",
            "minecraft:yellow_glazed_terracotta",
            "minecraft:yellow_shulker_box",
            "minecraft:",
            "minecraft:stone",
            "minecraft:granite",
            "minecraft:polished_granite",
            "minecraft:diorite",
            "minecraft:polished_diorite",
            "minecraft:andesite",
            "minecraft:polished_andesite",
            "minecraft:grass_block",
            "minecraft:dirt",
            "minecraft:coarse_dirt",
            "minecraft:podzol",
            "minecraft:oak_planks",
            "minecraft:spruce_planks",
            "minecraft:birch_planks",
            "minecraft:jungle_planks",
            "minecraft:acacia_planks",
            "minecraft:dark_oak_planks",
            "minecraft:oak_sapling",
            "minecraft:spruce_sapling",
            "minecraft:birch_sapling",
            "minecraft:jungle_sapling",
            "minecraft:acacia_sapling",
            "minecraft:dark_oak_sapling",
            "minecraft:sand",
            "minecraft:red_sand",
            "minecraft:oak_log",
            "minecraft:spruce_log",
            "minecraft:birch_log",
            "minecraft:jungle_log",
            "minecraft:oak_bark",
            "minecraft:spruce_bark",
            "minecraft:birch_bark",
            "minecraft:jungle_bark",
            "minecraft:oak_leaves",
            "minecraft:spruce_leaves",
            "minecraft:birch_leaves",
            "minecraft:jungle_leaves",
            "minecraft:sponge",
            "minecraft:wet_sponge",
            "minecraft:sandstone",
            "minecraft:chiseled_sandstone",
            "minecraft:cut_sandstone",
            "minecraft:note_block",
            "minecraft:white_bed",
            "minecraft:orange_bed",
            "minecraft:magenta_bed",
            "minecraft:light_blue_bed",
            "minecraft:yellow_bed",
            "minecraft:lime_bed",
            "minecraft:pink_bed",
            "minecraft:gray_bed",
            "minecraft:light_gray_bed",
            "minecraft:cyan_bed",
            "minecraft:purple_bed",
            "minecraft:blue_bed",
            "minecraft:brown_bed",
            "minecraft:green_bed",
            "minecraft:red_bed",
            "minecraft:black_bed",
            "minecraft:powered_rail",
            "minecraft:cobweb",
            "minecraft:dead_bush",
            "minecraft:grass",
            "minecraft:fern",
            "minecraft:white_wool",
            "minecraft:orange_wool",
            "minecraft:magenta_wool",
            "minecraft:light_blue_wool",
            "minecraft:yellow_wool",
            "minecraft:lime_wool",
            "minecraft:pink_wool",
            "minecraft:gray_wool",
            "minecraft:light_gray_wool",
            "minecraft:cyan_wool",
            "minecraft:purple_wool",
            "minecraft:blue_wool",
            "minecraft:brown_wool",
            "minecraft:green_wool",
            "minecraft:red_wool",
            "minecraft:black_wool",
            "minecraft:dandelion",
            "minecraft:poppy",
            "minecraft:blue_orchid",
            "minecraft:allium",
            "minecraft:azure_bluet",
            "minecraft:red_tulip",
            "minecraft:orange_tulip",
            "minecraft:white_tulip",
            "minecraft:pink_tulip",
            "minecraft:oxeye_daisy",
            "minecraft:stone_slab",
            "minecraft:sandstone_slab",
            "minecraft:petrified_oak_slab",
            "minecraft:cobblestone_slab",
            "minecraft:brick_slab",
            "minecraft:stone_brick_slab",
            "minecraft:nether_brick_slab",
            "minecraft:quartz_slab",
            "minecraft:smooth_sandstone",
            "minecraft:smooth_stone",
            "minecraft:bricks",
            "minecraft:oak_door",
            "minecraft:cobblestone_stairs",
            "minecraft:snow_block",
            "minecraft:sugar_cane",
            "minecraft:oak_fence",
            "minecraft:jack_o_lantern",
            "minecraft:white_stained_glass",
            "minecraft:orange_stained_glass",
            "minecraft:magenta_stained_glass",
            "minecraft:light_blue_stained_glass",
            "minecraft:yellow_stained_glass",
            "minecraft:lime_stained_glass",
            "minecraft:pink_stained_glass",
            "minecraft:gray_stained_glass",
            "minecraft:light_gray_stained_glass",
            "minecraft:cyan_stained_glass",
            "minecraft:purple_stained_glass",
            "minecraft:blue_stained_glass",
            "minecraft:brown_stained_glass",
            "minecraft:green_stained_glass",
            "minecraft:red_stained_glass",
            "minecraft:black_stained_glass",
            "minecraft:wooden_trapdoor",
            "minecraft:infested_stone",
            "minecraft:infested_cobblestone",
            "minecraft:infested_stone_bricks",
            "minecraft:infested_mossy_stone_bricks",
            "minecraft:infested_cracked_stone_bricks",
            "minecraft:infested_chiseled_stone_bricks",
            "minecraft:stone_bricks",
            "minecraft:mossy_stone_bricks",
            "minecraft:cracked_stone_bricks",
            "minecraft:chiseled_stone_bricks",
            "minecraft:oak_fence_gate",
            "minecraft:lily_pad",
            "minecraft:nether_bricks",
            "minecraft:oak_slab",
            "minecraft:spruce_slab",
            "minecraft:birch_slab",
            "minecraft:jungle_slab",
            "minecraft:acacia_slab",
            "minecraft:dark_oak_slab",
            "minecraft:mossy_cobblestone_wall",
            "minecraft:skeleton_skull",
            "minecraft:wither_skeleton_skull",
            "minecraft:zombie_head",
            "minecraft:player_head",
            "minecraft:creeper_head",
            "minecraft:dragon_head",
            "minecraft:anvil",
            "minecraft:chipped_anvil",
            "minecraft:damaged_anvil",
            "minecraft:nether_quartz_ore",
            "minecraft:chiseled_quartz",
            "minecraft:quartz_pillar",
            "minecraft:white_terracotta",
            "minecraft:orange_terracotta",
            "minecraft:magenta_terracotta",
            "minecraft:light_blue_terracotta",
            "minecraft:yellow_terracotta",
            "minecraft:lime_terracotta",
            "minecraft:pink_terracotta",
            "minecraft:gray_terracotta",
            "minecraft:light_gray_terracotta",
            "minecraft:cyan_terracotta",
            "minecraft:purple_terracotta",
            "minecraft:blue_terracotta",
            "minecraft:brown_terracotta",
            "minecraft:green_terracotta",
            "minecraft:red_terracotta",
            "minecraft:black_terracotta",
            "minecraft:white_stained_glass_pane",
            "minecraft:orange_stained_glass_pane",
            "minecraft:magenta_stained_glass_pane",
            "minecraft:light_blue_stained_glass_pane",
            "minecraft:yellow_stained_glass_pane",
            "minecraft:lime_stained_glass_pane",
            "minecraft:pink_stained_glass_pane",
            "minecraft:gray_stained_glass_pane",
            "minecraft:light_gray_stained_glass_pane",
            "minecraft:cyan_stained_glass_pane",
            "minecraft:purple_stained_glass_pane",
            "minecraft:blue_stained_glass_pane",
            "minecraft:brown_stained_glass_pane",
            "minecraft:green_stained_glass_pane",
            "minecraft:red_stained_glass_pane",
            "minecraft:black_stained_glass_pane",
            "minecraft:acacia_leaves",
            "minecraft:dark_oak_leaves",
            "minecraft:acacia_log",
            "minecraft:dark_oak_log",
            "minecraft:acacia_bark",
            "minecraft:dark_oak_bark",
            "minecraft:slime_block",
            "minecraft:prismarine_bricks",
            "minecraft:dark_primarine",
            "minecraft:hay_bale",
            "minecraft:white_carpet",
            "minecraft:orange_carpet",
            "minecraft:magenta_carpet",
            "minecraft:light_blue_carpet",
            "minecraft:yellow_carpet",
            "minecraft:lime_carpet",
            "minecraft:pink_carpet",
            "minecraft:gray_carpet",
            "minecraft:light_gray_carpet",
            "minecraft:cyan_carpet",
            "minecraft:purple_carpet",
            "minecraft:blue_carpet",
            "minecraft:brown_carpet",
            "minecraft:green_carpet",
            "minecraft:red_carpet",
            "minecraft:black_carpet",
            "minecraft:terracotta",
            "minecraft:sunflower",
            "minecraft:lilac",
            "minecraft:tall_grass",
            "minecraft:large_fern",
            "minecraft:rose_bush",
            "minecraft:peony",
            "minecraft:chiseled_red_sandstone",
            "minecraft:cut_red_sandstone",
            "minecraft:smooth_red_sandstone",
            "minecraft:end_stone_bricks",
            "minecraft:magma_block",
            "minecraft:red_nether_bricks",
            "minecraft:light_gray_shulker_box",
            "minecraft:light_gray_glazed_terracotta",
            "minecraft:white_concrete",
            "minecraft:orange_concrete",
            "minecraft:magenta_concrete",
            "minecraft:light_blue_concrete",
            "minecraft:yellow_concrete",
            "minecraft:lime_concrete",
            "minecraft:pink_concrete",
            "minecraft:gray_concrete",
            "minecraft:light_gray_concrete",
            "minecraft:cyan_concrete",
            "minecraft:purple_concrete",
            "minecraft:blue_concrete",
            "minecraft:brown_concrete",
            "minecraft:green_concrete",
            "minecraft:red_concrete",
            "minecraft:black_concrete",
            "minecraft:white_concrete_powder",
            "minecraft:orange_concrete_powder",
            "minecraft:magenta_concrete_powder",
            "minecraft:light_blue_concrete_powder",
            "minecraft:yellow_concrete_powder",
            "minecraft:lime_concrete_powder",
            "minecraft:pink_concrete_powder",
            "minecraft:gray_concrete_powder",
            "minecraft:light_gray_concrete_powder",
            "minecraft:cyan_concrete_powder",
            "minecraft:purple_concrete_powder",
            "minecraft:blue_concrete_powder",
            "minecraft:brown_concrete_powder",
            "minecraft:green_concrete_powder",
            "minecraft:red_concrete_powder",
            "minecraft:black_concrete_powder",
            "minecraft:charcoal",
            "minecraft:notch_apple",
            "minecraft:redstone_dust",
            "minecraft:oak_boat",
            "minecraft:slimeball",
            "minecraft:cod",
            "minecraft:salmon",
            "minecraft:clownfish",
            "minecraft:pufferfish",
            "minecraft:cooked_cod",
            "minecraft:cooked_salmon",
            "minecraft:bone_meal",
            "minecraft:orange_dye",
            "minecraft:magenta_dye",
            "minecraft:light_blue_dye",
            "minecraft:dandelion_yellow",
            "minecraft:lime_dye",
            "minecraft:pink_dye",
            "minecraft:gray_dye",
            "minecraft:light_gray_dye",
            "minecraft:cyan_dye",
            "minecraft:purple_dye",
            "minecraft:lapis_lazuli",
            "minecraft:cocoa_beans",
            "minecraft:cactus_green",
            "minecraft:rose_red",
            "minecraft:ink_sac",
            "minecraft:glistering_melon",
            "minecraft:xp_bottle",
            "minecraft:book_and_quill",
            "minecraft:nether_brick",
            "minecraft:ender_crystal",
            "minecraft:music_disc_13",
            "minecraft:music_disc_cat",
            "minecraft:music_disc_blocks",
            "minecraft:music_disc_chirp",
            "minecraft:music_disc_far",
            "minecraft:music_disc_mellohi",
            "minecraft:music_disc_stal",
            "minecraft:music_disc_strad",
            "minecraft:music_disc_ward",
            "minecraft:music_disc_11",
            "minecraft:music_disc_wait"
        ],
        "recipe": [
            "minecraft:acacia_boat",
            "minecraft:acacia_door",
            "minecraft:acacia_fence",
            "minecraft:acacia_fence_gate",
            "minecraft:acacia_planks",
            "minecraft:acacia_stairs",
            "minecraft:acacia_wooden_slab",
            "minecraft:activator_rail",
            "minecraft:andesite",
            "minecraft:anvil",
            "minecraft:armor_stand",
            "minecraft:armordye",
            "minecraft:arrow",
            "minecraft:banneraddpattern",
            "minecraft:bannerduplicate",
            "minecraft:beacon",
            "minecraft:beetroot_soup",
            "minecraft:birch_boat",
            "minecraft:birch_door",
            "minecraft:birch_fence",
            "minecraft:birch_fence_gate",
            "minecraft:birch_planks",
            "minecraft:birch_stairs",
            "minecraft:birch_wooden_slab",
            "minecraft:black_banner",
            "minecraft:black_bed",
            "minecraft:black_bed_from_white_bed",
            "minecraft:black_carpet",
            "minecraft:black_concrete_powder",
            "minecraft:black_stained_glass",
            "minecraft:black_stained_glass_pane",
            "minecraft:black_stained_hardened_clay",
            "minecraft:black_wool",
            "minecraft:blaze_powder",
            "minecraft:blue_banner",
            "minecraft:blue_bed",
            "minecraft:blue_bed_from_white_bed",
            "minecraft:blue_carpet",
            "minecraft:blue_concrete_powder",
            "minecraft:blue_stained_glass",
            "minecraft:blue_stained_glass_pane",
            "minecraft:blue_stained_hardened_clay",
            "minecraft:blue_wool",
            "minecraft:boat",
            "minecraft:bone_block",
            "minecraft:bone_meal_from_block",
            "minecraft:bone_meal_from_bone",
            "minecraft:book",
            "minecraft:bookcloning",
            "minecraft:bookshelf",
            "minecraft:bow",
            "minecraft:bowl",
            "minecraft:bread",
            "minecraft:brewing_stand",
            "minecraft:brick_block",
            "minecraft:brick_slab",
            "minecraft:brick_stairs",
            "minecraft:brown_banner",
            "minecraft:brown_bed",
            "minecraft:brown_bed_from_white_bed",
            "minecraft:brown_carpet",
            "minecraft:brown_concrete_powder",
            "minecraft:brown_stained_glass",
            "minecraft:brown_stained_glass_pane",
            "minecraft:brown_stained_hardened_clay",
            "minecraft:brown_wool",
            "minecraft:bucket",
            "minecraft:cake",
            "minecraft:carrot_on_a_stick",
            "minecraft:cauldron",
            "minecraft:chest",
            "minecraft:chest_minecart",
            "minecraft:chiseled_quartz_block",
            "minecraft:chiseled_red_sandstone",
            "minecraft:chiseled_sandstone",
            "minecraft:chiseled_stonebrick",
            "minecraft:clay",
            "minecraft:clock",
            "minecraft:coal",
            "minecraft:coal_block",
            "minecraft:coarse_dirt",
            "minecraft:cobblestone_slab",
            "minecraft:cobblestone_wall",
            "minecraft:comparator",
            "minecraft:compass",
            "minecraft:cookie",
            "minecraft:crafting_table",
            "minecraft:cyan_banner",
            "minecraft:cyan_bed",
            "minecraft:cyan_bed_from_white_bed",
            "minecraft:cyan_carpet",
            "minecraft:cyan_concrete_powder",
            "minecraft:cyan_dye",
            "minecraft:cyan_stained_glass",
            "minecraft:cyan_stained_glass_pane",
            "minecraft:cyan_stained_hardened_clay",
            "minecraft:cyan_wool",
            "minecraft:dark_oak_boat",
            "minecraft:dark_oak_door",
            "minecraft:dark_oak_fence",
            "minecraft:dark_oak_fence_gate",
            "minecraft:dark_oak_planks",
            "minecraft:dark_oak_stairs",
            "minecraft:dark_oak_wooden_slab",
            "minecraft:dark_prismarine",
            "minecraft:daylight_detector",
            "minecraft:detector_rail",
            "minecraft:diamond",
            "minecraft:diamond_axe",
            "minecraft:diamond_block",
            "minecraft:diamond_boots",
            "minecraft:diamond_chestplate",
            "minecraft:diamond_helmet",
            "minecraft:diamond_hoe",
            "minecraft:diamond_leggings",
            "minecraft:diamond_pickaxe",
            "minecraft:diamond_shovel",
            "minecraft:diamond_sword",
            "minecraft:diorite",
            "minecraft:dispenser",
            "minecraft:dropper",
            "minecraft:emerald",
            "minecraft:emerald_block",
            "minecraft:enchanting_table",
            "minecraft:end_bricks",
            "minecraft:end_crystal",
            "minecraft:end_rod",
            "minecraft:ender_chest",
            "minecraft:ender_eye",
            "minecraft:fence",
            "minecraft:fence_gate",
            "minecraft:fermented_spider_eye",
            "minecraft:fire_charge",
            "minecraft:fireworks",
            "minecraft:fishing_rod",
            "minecraft:flint_and_steel",
            "minecraft:flower_pot",
            "minecraft:furnace",
            "minecraft:furnace_minecart",
            "minecraft:glass_bottle",
            "minecraft:glass_pane",
            "minecraft:glowstone",
            "minecraft:gold_block",
            "minecraft:gold_ingot_from_block",
            "minecraft:gold_ingot_from_nuggets",
            "minecraft:gold_nugget",
            "minecraft:golden_apple",
            "minecraft:golden_axe",
            "minecraft:golden_boots",
            "minecraft:golden_carrot",
            "minecraft:golden_chestplate",
            "minecraft:golden_helmet",
            "minecraft:golden_hoe",
            "minecraft:golden_leggings",
            "minecraft:golden_pickaxe",
            "minecraft:golden_rail",
            "minecraft:golden_shovel",
            "minecraft:golden_sword",
            "minecraft:granite",
            "minecraft:gray_banner",
            "minecraft:gray_bed",
            "minecraft:gray_bed_from_white_bed",
            "minecraft:gray_carpet",
            "minecraft:gray_concrete_powder",
            "minecraft:gray_dye",
            "minecraft:gray_stained_glass",
            "minecraft:gray_stained_glass_pane",
            "minecraft:gray_stained_hardened_clay",
            "minecraft:gray_wool",
            "minecraft:green_banner",
            "minecraft:green_bed",
            "minecraft:green_bed_from_white_bed",
            "minecraft:green_carpet",
            "minecraft:green_concrete_powder",
            "minecraft:green_stained_glass",
            "minecraft:green_stained_glass_pane",
            "minecraft:green_stained_hardened_clay",
            "minecraft:green_wool",
            "minecraft:hay_block",
            "minecraft:heavy_weighted_pressure_plate",
            "minecraft:hopper",
            "minecraft:hopper_minecart",
            "minecraft:iron_axe",
            "minecraft:iron_bars",
            "minecraft:iron_block",
            "minecraft:iron_boots",
            "minecraft:iron_chestplate",
            "minecraft:iron_door",
            "minecraft:iron_helmet",
            "minecraft:iron_hoe",
            "minecraft:iron_ingot_from_block",
            "minecraft:iron_ingot_from_nuggets",
            "minecraft:iron_leggings",
            "minecraft:iron_nugget",
            "minecraft:iron_pickaxe",
            "minecraft:iron_shovel",
            "minecraft:iron_sword",
            "minecraft:iron_trapdoor",
            "minecraft:item_frame",
            "minecraft:jukebox",
            "minecraft:jungle_boat",
            "minecraft:jungle_door",
            "minecraft:jungle_fence",
            "minecraft:jungle_fence_gate",
            "minecraft:jungle_planks",
            "minecraft:jungle_stairs",
            "minecraft:jungle_wooden_slab",
            "minecraft:ladder",
            "minecraft:lapis_block",
            "minecraft:lapis_lazuli",
            "minecraft:lead",
            "minecraft:leather",
            "minecraft:leather_boots",
            "minecraft:leather_chestplate",
            "minecraft:leather_helmet",
            "minecraft:leather_leggings",
            "minecraft:lever",
            "minecraft:light_blue_banner",
            "minecraft:light_blue_bed",
            "minecraft:light_blue_bed_from_white_bed",
            "minecraft:light_blue_carpet",
            "minecraft:light_blue_concrete_powder",
            "minecraft:light_blue_dye_from_blue_orchid",
            "minecraft:light_blue_dye_from_lapis_bonemeal",
            "minecraft:light_blue_stained_glass",
            "minecraft:light_blue_stained_glass_pane",
            "minecraft:light_blue_stained_hardened_clay",
            "minecraft:light_blue_wool",
            "minecraft:light_gray_banner",
            "minecraft:light_gray_bed",
            "minecraft:light_gray_bed_from_white_bed",
            "minecraft:light_gray_carpet",
            "minecraft:light_gray_concrete_powder",
            "minecraft:light_gray_dye_from_azure_bluet",
            "minecraft:light_gray_dye_from_gray_bonemeal",
            "minecraft:light_gray_dye_from_ink_bonemeal",
            "minecraft:light_gray_dye_from_oxeye_daisy",
            "minecraft:light_gray_dye_from_white_tulip",
            "minecraft:light_gray_stained_glass",
            "minecraft:light_gray_stained_glass_pane",
            "minecraft:light_gray_stained_hardened_clay",
            "minecraft:light_gray_wool",
            "minecraft:light_weighted_pressure_plate",
            "minecraft:lime_banner",
            "minecraft:lime_bed",
            "minecraft:lime_bed_from_white_bed",
            "minecraft:lime_carpet",
            "minecraft:lime_concrete_powder",
            "minecraft:lime_dye",
            "minecraft:lime_stained_glass",
            "minecraft:lime_stained_glass_pane",
            "minecraft:lime_stained_hardened_clay",
            "minecraft:lime_wool",
            "minecraft:lit_pumpkin",
            "minecraft:magenta_banner",
            "minecraft:magenta_bed",
            "minecraft:magenta_bed_from_white_bed",
            "minecraft:magenta_carpet",
            "minecraft:magenta_concrete_powder",
            "minecraft:magenta_dye_from_allium",
            "minecraft:magenta_dye_from_lapis_ink_bonemeal",
            "minecraft:magenta_dye_from_lapis_red_pink",
            "minecraft:magenta_dye_from_lilac",
            "minecraft:magenta_dye_from_purple_and_pink",
            "minecraft:magenta_stained_glass",
            "minecraft:magenta_stained_glass_pane",
            "minecraft:magenta_stained_hardened_clay",
            "minecraft:magenta_wool",
            "minecraft:magma",
            "minecraft:magma_cream",
            "minecraft:map",
            "minecraft:mapcloning",
            "minecraft:mapextending",
            "minecraft:melon_block",
            "minecraft:melon_seeds",
            "minecraft:minecart",
            "minecraft:mossy_cobblestone",
            "minecraft:mossy_cobblestone_wall",
            "minecraft:mossy_stonebrick",
            "minecraft:mushroom_stew",
            "minecraft:nether_brick",
            "minecraft:nether_brick_fence",
            "minecraft:nether_brick_slab",
            "minecraft:nether_brick_stairs",
            "minecraft:nether_wart_block",
            "minecraft:noteblock",
            "minecraft:oak_planks",
            "minecraft:oak_stairs",
            "minecraft:oak_wooden_slab",
            "minecraft:observer",
            "minecraft:orange_banner",
            "minecraft:orange_bed",
            "minecraft:orange_bed_from_white_bed",
            "minecraft:orange_carpet",
            "minecraft:orange_concrete_powder",
            "minecraft:orange_dye_from_orange_tulip",
            "minecraft:orange_dye_from_red_yellow",
            "minecraft:orange_stained_glass",
            "minecraft:orange_stained_glass_pane",
            "minecraft:orange_stained_hardened_clay",
            "minecraft:orange_wool",
            "minecraft:painting",
            "minecraft:paper",
            "minecraft:pillar_quartz_block",
            "minecraft:pink_banner",
            "minecraft:pink_bed",
            "minecraft:pink_bed_from_white_bed",
            "minecraft:pink_carpet",
            "minecraft:pink_concrete_powder",
            "minecraft:pink_dye_from_peony",
            "minecraft:pink_dye_from_pink_tulip",
            "minecraft:pink_dye_from_red_bonemeal",
            "minecraft:pink_stained_glass",
            "minecraft:pink_stained_glass_pane",
            "minecraft:pink_stained_hardened_clay",
            "minecraft:pink_wool",
            "minecraft:piston",
            "minecraft:polished_andesite",
            "minecraft:polished_diorite",
            "minecraft:polished_granite",
            "minecraft:prismarine",
            "minecraft:prismarine_bricks",
            "minecraft:pumpkin_pie",
            "minecraft:pumpkin_seeds",
            "minecraft:purple_banner",
            "minecraft:purple_bed",
            "minecraft:purple_bed_from_white_bed",
            "minecraft:purple_carpet",
            "minecraft:purple_concrete_powder",
            "minecraft:purple_dye",
            "minecraft:purple_shulker_box",
            "minecraft:purple_stained_glass",
            "minecraft:purple_stained_glass_pane",
            "minecraft:purple_stained_hardened_clay",
            "minecraft:purple_wool",
            "minecraft:purpur_block",
            "minecraft:purpur_pillar",
            "minecraft:purpur_slab",
            "minecraft:purpur_stairs",
            "minecraft:quartz_block",
            "minecraft:quartz_slab",
            "minecraft:quartz_stairs",
            "minecraft:rabbit_stew_from_brown_mushroom",
            "minecraft:rabbit_stew_from_red_mushroom",
            "minecraft:rail",
            "minecraft:red_banner",
            "minecraft:red_bed",
            "minecraft:red_bed_from_white_bed",
            "minecraft:red_carpet",
            "minecraft:red_concrete_powder",
            "minecraft:red_dye_from_beetroot",
            "minecraft:red_dye_from_poppy",
            "minecraft:red_dye_from_rose_bush",
            "minecraft:red_dye_from_tulip",
            "minecraft:red_nether_brick",
            "minecraft:red_sandstone",
            "minecraft:red_sandstone_slab",
            "minecraft:red_sandstone_stairs",
            "minecraft:red_stained_glass",
            "minecraft:red_stained_glass_pane",
            "minecraft:red_stained_hardened_clay",
            "minecraft:red_wool",
            "minecraft:redstone",
            "minecraft:redstone_block",
            "minecraft:redstone_lamp",
            "minecraft:redstone_torch",
            "minecraft:repairitem",
            "minecraft:repeater",
            "minecraft:sandstone",
            "minecraft:sandstone_slab",
            "minecraft:sandstone_stairs",
            "minecraft:sea_lantern",
            "minecraft:shears",
            "minecraft:shield",
            "minecraft:shielddecoration",
            "minecraft:shulkerboxcoloring",
            "minecraft:sign",
            "minecraft:slime",
            "minecraft:slime_ball",
            "minecraft:smooth_red_sandstone",
            "minecraft:smooth_sandstone",
            "minecraft:snow",
            "minecraft:snow_layer",
            "minecraft:speckled_melon",
            "minecraft:spectral_arrow",
            "minecraft:spruce_boat",
            "minecraft:spruce_door",
            "minecraft:spruce_fence",
            "minecraft:spruce_fence_gate",
            "minecraft:spruce_planks",
            "minecraft:spruce_stairs",
            "minecraft:spruce_wooden_slab",
            "minecraft:stick",
            "minecraft:sticky_piston",
            "minecraft:stone_axe",
            "minecraft:stone_brick_slab",
            "minecraft:stone_brick_stairs",
            "minecraft:stone_button",
            "minecraft:stone_hoe",
            "minecraft:stone_pickaxe",
            "minecraft:stone_pressure_plate",
            "minecraft:stone_shovel",
            "minecraft:stone_slab",
            "minecraft:stone_stairs",
            "minecraft:stone_sword",
            "minecraft:stonebrick",
            "minecraft:string_to_wool",
            "minecraft:sugar",
            "minecraft:tippedarrow",
            "minecraft:tnt",
            "minecraft:tnt_minecart",
            "minecraft:torch",
            "minecraft:trapdoor",
            "minecraft:trapped_chest",
            "minecraft:tripwire_hook",
            "minecraft:wheat",
            "minecraft:white_banner",
            "minecraft:white_bed",
            "minecraft:white_carpet",
            "minecraft:white_concrete_powder",
            "minecraft:white_stained_glass",
            "minecraft:white_stained_glass_pane",
            "minecraft:white_stained_hardened_clay",
            "minecraft:wooden_axe",
            "minecraft:wooden_button",
            "minecraft:wooden_door",
            "minecraft:wooden_hoe",
            "minecraft:wooden_pickaxe",
            "minecraft:wooden_pressure_plate",
            "minecraft:wooden_shovel",
            "minecraft:wooden_sword",
            "minecraft:writable_book",
            "minecraft:yellow_banner",
            "minecraft:yellow_bed",
            "minecraft:yellow_bed_from_white_bed",
            "minecraft:yellow_carpet",
            "minecraft:yellow_concrete_powder",
            "minecraft:yellow_dye_from_dandelion",
            "minecraft:yellow_dye_from_sunflower",
            "minecraft:yellow_stained_glass",
            "minecraft:yellow_stained_glass_pane",
            "minecraft:yellow_stained_hardened_clay",
            "minecraft:yellow_wool",
            "*"
        ],
        "slot": {
            "inventory": [
                "slot.armor.chest",
                "slot.armor.feet",
                "slot.armor.head",
                "slot.armor.legs",
                "slot.container.0",
                "slot.container.1",
                "slot.container.10",
                "slot.container.11",
                "slot.container.12",
                "slot.container.13",
                "slot.container.14",
                "slot.container.15",
                "slot.container.16",
                "slot.container.17",
                "slot.container.18",
                "slot.container.19",
                "slot.container.2",
                "slot.container.20",
                "slot.container.21",
                "slot.container.22",
                "slot.container.23",
                "slot.container.24",
                "slot.container.25",
                "slot.container.26",
                "slot.container.27",
                "slot.container.28",
                "slot.container.29",
                "slot.container.3",
                "slot.container.30",
                "slot.container.31",
                "slot.container.32",
                "slot.container.33",
                "slot.container.34",
                "slot.container.35",
                "slot.container.36",
                "slot.container.37",
                "slot.container.38",
                "slot.container.39",
                "slot.container.4",
                "slot.container.40",
                "slot.container.41",
                "slot.container.42",
                "slot.container.43",
                "slot.container.44",
                "slot.container.45",
                "slot.container.46",
                "slot.container.47",
                "slot.container.48",
                "slot.container.49",
                "slot.container.5",
                "slot.container.50",
                "slot.container.51",
                "slot.container.52",
                "slot.container.53",
                "slot.container.6",
                "slot.container.7",
                "slot.container.8",
                "slot.container.9",
                "slot.enderchest.0",
                "slot.enderchest.1",
                "slot.enderchest.10",
                "slot.enderchest.11",
                "slot.enderchest.12",
                "slot.enderchest.13",
                "slot.enderchest.14",
                "slot.enderchest.15",
                "slot.enderchest.16",
                "slot.enderchest.17",
                "slot.enderchest.18",
                "slot.enderchest.19",
                "slot.enderchest.2",
                "slot.enderchest.20",
                "slot.enderchest.21",
                "slot.enderchest.22",
                "slot.enderchest.23",
                "slot.enderchest.24",
                "slot.enderchest.25",
                "slot.enderchest.26",
                "slot.enderchest.3",
                "slot.enderchest.4",
                "slot.enderchest.5",
                "slot.enderchest.6",
                "slot.enderchest.7",
                "slot.enderchest.8",
                "slot.enderchest.9",
                "slot.horse.0",
                "slot.horse.1",
                "slot.horse.10",
                "slot.horse.11",
                "slot.horse.12",
                "slot.horse.13",
                "slot.horse.14",
                "slot.horse.2",
                "slot.horse.3",
                "slot.horse.4",
                "slot.horse.5",
                "slot.horse.6",
                "slot.horse.7",
                "slot.horse.8",
                "slot.horse.9",
                "slot.horse.armor",
                "slot.horse.chest",
                "slot.horse.saddle",
                "slot.hotbar.0",
                "slot.hotbar.1",
                "slot.hotbar.2",
                "slot.hotbar.3",
                "slot.hotbar.4",
                "slot.hotbar.5",
                "slot.hotbar.6",
                "slot.hotbar.7",
                "slot.hotbar.8",
                "slot.inventory.0",
                "slot.inventory.1",
                "slot.inventory.10",
                "slot.inventory.11",
                "slot.inventory.12",
                "slot.inventory.13",
                "slot.inventory.14",
                "slot.inventory.15",
                "slot.inventory.16",
                "slot.inventory.17",
                "slot.inventory.18",
                "slot.inventory.19",
                "slot.inventory.2",
                "slot.inventory.20",
                "slot.inventory.21",
                "slot.inventory.22",
                "slot.inventory.23",
                "slot.inventory.24",
                "slot.inventory.25",
                "slot.inventory.26",
                "slot.inventory.3",
                "slot.inventory.4",
                "slot.inventory.5",
                "slot.inventory.6",
                "slot.inventory.7",
                "slot.inventory.8",
                "slot.inventory.9",
                "slot.villager.0",
                "slot.villager.1",
                "slot.villager.2",
                "slot.villager.3",
                "slot.villager.4",
                "slot.villager.5",
                "slot.villager.6",
                "slot.villager.7",
                "slot.weapon",
                "slot.weapon.mainhand",
                "slot.weapon.offhand"
            ],
            "scoreboard": [
                "belowName",
                "list",
                "sidebar",
                "sidebar.team.aqua",
                "sidebar.team.black",
                "sidebar.team.blue",
                "sidebar.team.dark_aqua",
                "sidebar.team.dark_blue",
                "sidebar.team.dark_gray",
                "sidebar.team.dark_green",
                "sidebar.team.dark_purple",
                "sidebar.team.dark_red",
                "sidebar.team.gold",
                "sidebar.team.gray",
                "sidebar.team.green",
                "sidebar.team.light_purple",
                "sidebar.team.red",
                "sidebar.team.white",
                "sidebar.team.yellow"
            ]
        }
    },
    "node_modules": {
        "coffeescript": {
            "bin": {},
            "lib": {
                "coffeescript": {},
                "coffeescript-browser-compiler-legacy": {},
                "coffeescript-browser-compiler-modern": {}
            },
            "package": {
                "_from": "coffeescript@^2.4.1",
                "_id": "coffeescript@2.5.1",
                "_inBundle": false,
                "_integrity": "sha512-J2jRPX0eeFh5VKyVnoLrfVFgLZtnnmp96WQSLAS8OrLm2wtQLcnikYKe1gViJKDH7vucjuhHvBKKBP3rKcD1tQ==",
                "_location": "/coffeescript",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "coffeescript@^2.4.1",
                    "name": "coffeescript",
                    "escapedName": "coffeescript",
                    "rawSpec": "^2.4.1",
                    "saveSpec": null,
                    "fetchSpec": "^2.4.1"
                },
                "_requiredBy": [
                    "/cson"
                ],
                "_resolved": "https://registry.npmjs.org/coffeescript/-/coffeescript-2.5.1.tgz",
                "_shasum": "b2442a1f2c806139669534a54adc35010559d16a",
                "_spec": "coffeescript@^2.4.1",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/cson",
                "author": {
                    "name": "Jeremy Ashkenas"
                },
                "bin": {
                    "coffee": "bin/coffee",
                    "cake": "bin/cake"
                },
                "browser": "./lib/coffeescript-browser-compiler-legacy/coffeescript.js",
                "bugs": {
                    "url": "https://github.com/jashkenas/coffeescript/issues"
                },
                "bundleDependencies": false,
                "dependencies": {},
                "deprecated": false,
                "description": "Unfancy JavaScript",
                "devDependencies": {
                    "@babel/core": "^7.7.7",
                    "@babel/preset-env": "^7.7.7",
                    "babel-preset-minify": "^0.5.1",
                    "codemirror": "^5.50.0",
                    "docco": "~0.8.0",
                    "highlight.js": "~9.17.1",
                    "jison": "^0.4.18",
                    "markdown-it": "~10.0.0",
                    "underscore": "~1.9.1",
                    "webpack": "~4.41.5"
                },
                "directories": {
                    "lib": "./lib/coffeescript"
                },
                "engines": {
                    "node": ">=6"
                },
                "files": [
                    "bin",
                    "lib",
                    "register.js",
                    "repl.js"
                ],
                "homepage": "https://coffeescript.org",
                "keywords": [
                    "javascript",
                    "language",
                    "coffeescript",
                    "compiler"
                ],
                "license": "MIT",
                "main": "./lib/coffeescript/index",
                "module": "./lib/coffeescript-browser-compiler-modern/coffeescript.js",
                "name": "coffeescript",
                "repository": {
                    "type": "git",
                    "url": "git://github.com/jashkenas/coffeescript.git"
                },
                "scripts": {
                    "test": "node ./bin/cake test",
                    "test-harmony": "node --harmony ./bin/cake test"
                },
                "version": "2.5.1"
            }
        },
        "coffescript": {
            "package": {
                "_from": "coffescript",
                "_id": "coffescript@0.0.1-security",
                "_inBundle": false,
                "_integrity": "sha512-VHJ9ut+YjMDk6wgTe/2wW8e2eP8XqAsP7dDQwX6JMsy3ME2swQxU6lME1FZrhB8A01/5H90+0qCA90RF43BHRA==",
                "_location": "/coffescript",
                "_phantomChildren": {},
                "_requested": {
                    "type": "tag",
                    "registry": true,
                    "raw": "coffescript",
                    "name": "coffescript",
                    "escapedName": "coffescript",
                    "rawSpec": "",
                    "saveSpec": null,
                    "fetchSpec": "latest"
                },
                "_requiredBy": [
                    "#USER",
                    "/"
                ],
                "_resolved": "https://registry.npmjs.org/coffescript/-/coffescript-0.0.1-security.tgz",
                "_shasum": "21455f7546cdab412b2fcf7ad6830763bb60da47",
                "_spec": "coffescript",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources",
                "bugs": {
                    "url": "https://github.com/npm/security-holder/issues"
                },
                "bundleDependencies": false,
                "deprecated": false,
                "description": "security holding package",
                "homepage": "https://github.com/npm/security-holder#readme",
                "name": "coffescript",
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/npm/security-holder.git"
                },
                "version": "0.0.1-security"
            }
        },
        "cson": {
            "edition-esnext": {},
            "package": {
                "_from": "cson",
                "_id": "cson@6.9.0",
                "_inBundle": false,
                "_integrity": "sha512-iqtKZ8q2oWFSU4qxP+y2pekVEXzzE1wFXaAu2U8qR69XnNoImtexPHNw09ksBonfuhLjYsaOFjbt5iKu0zACcA==",
                "_location": "/cson",
                "_phantomChildren": {},
                "_requested": {
                    "type": "tag",
                    "registry": true,
                    "raw": "cson",
                    "name": "cson",
                    "escapedName": "cson",
                    "rawSpec": "",
                    "saveSpec": null,
                    "fetchSpec": "latest"
                },
                "_requiredBy": [
                    "#USER",
                    "/"
                ],
                "_resolved": "https://registry.npmjs.org/cson/-/cson-6.9.0.tgz",
                "_shasum": "929dcd6b9179fbc65ef610c46b3be5a233c63e2b",
                "_spec": "cson",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources",
                "author": {
                    "name": "2012+ Bevry Pty Ltd",
                    "email": "us@bevry.me",
                    "url": "http://bevry.me"
                },
                "badges": {
                    "list": [
                        "travisci",
                        "npmversion",
                        "npmdownloads",
                        "daviddm",
                        "daviddmdev",
                        "---",
                        "githubsponsors",
                        "patreon",
                        "flattr",
                        "liberapay",
                        "buymeacoffee",
                        "opencollective",
                        "crypto",
                        "paypal",
                        "wishlist"
                    ],
                    "config": {
                        "githubSponsorsUsername": "balupton",
                        "buymeacoffeeUsername": "balupton",
                        "cryptoURL": "https://bevry.me/crypto",
                        "flattrUsername": "balupton",
                        "liberapayUsername": "bevry",
                        "opencollectiveUsername": "bevry",
                        "patreonUsername": "bevry",
                        "paypalURL": "https://bevry.me/paypal",
                        "wishlistURL": "https://bevry.me/wishlist",
                        "travisTLD": "com"
                    }
                },
                "bin": {
                    "cson2json": "bin.js",
                    "json2cson": "bin.js"
                },
                "bugs": {
                    "url": "https://github.com/bevry/cson/issues"
                },
                "bundleDependencies": false,
                "contributors": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    },
                    {
                        "name": "Attila Oláh",
                        "email": "attilaolah@google.com",
                        "url": "http://attilaolah.eu/"
                    },
                    {
                        "name": "evinugur",
                        "url": "https://github.com/evinugur"
                    },
                    {
                        "name": "Jason Karns",
                        "email": "jason.karns@gmail.com",
                        "url": "http://jasonkarns.com"
                    },
                    {
                        "name": "Joël Perras",
                        "email": "joel@nerderati.com",
                        "url": "http://nerderati.com"
                    },
                    {
                        "name": "Linus Gustav Larsson Thiel",
                        "email": "linus@hanssonlarsson.se",
                        "url": "http://yesbabyyes.se/"
                    },
                    {
                        "name": "Tushar Kant",
                        "email": "me@tushar.works",
                        "url": "http://indiez.io"
                    },
                    {
                        "name": "Claudius Nicolae",
                        "email": "claudius.nicolae@gmail.com",
                        "url": "https://github.com/clyfe"
                    },
                    {
                        "name": "Rob Loach",
                        "email": "robloach@gmail.com",
                        "url": "http://robloach.net"
                    },
                    {
                        "name": "Ryan LeFevre",
                        "email": "meltingice8917@gmail.com",
                        "url": "http://meltingice.net"
                    },
                    {
                        "name": "Zearin",
                        "url": "https://github.com/Zearin"
                    },
                    {
                        "name": "ZHANG Cheng",
                        "email": "czhang.oss@gmail.com",
                        "url": "http://about.me/zhangcheng77"
                    },
                    {
                        "name": "Attila Oláh",
                        "email": "atl@google.com",
                        "url": "http://attilaolah.eu"
                    },
                    {
                        "name": "dependabot-preview[bot]",
                        "url": "http://github.com/apps/dependabot-preview"
                    }
                ],
                "dependencies": {
                    "coffeescript": "^2.4.1",
                    "cson-parser": "^4.0.3",
                    "extract-opts": "^4.3.0",
                    "requirefresh": "^3.3.0",
                    "safefs": "^5.5.0"
                },
                "deprecated": false,
                "description": "CoffeeScript-Object-Notation Parser. Same as JSON but for CoffeeScript objects.",
                "devDependencies": {
                    "assert-helpers": "^5.8.0",
                    "coffeelint": "^2.1.0",
                    "kava": "^4.4.0",
                    "projectz": "^1.16.0",
                    "safeps": "^9.3.0",
                    "valid-directory": "^1.6.0"
                },
                "editions": [
                    {
                        "description": "coffeescript source code with require for modules",
                        "directory": "source",
                        "entry": "index.coffee",
                        "tags": [
                            "coffeescript",
                            "require"
                        ],
                        "engines": false
                    },
                    {
                        "description": "coffeescript compiled for Node.js with require for modules",
                        "directory": "edition-esnext",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "esnext",
                            "require"
                        ],
                        "engines": {
                            "node": "8 || 10 || 12 || 13"
                        }
                    }
                ],
                "engines": {
                    "node": ">=8"
                },
                "funding": "https://bevry.me/fund",
                "homepage": "https://github.com/bevry/cson",
                "keywords": [
                    "javascript",
                    "coffeescript",
                    "json",
                    "cson",
                    "parse",
                    "stringify"
                ],
                "license": "MIT",
                "main": "edition-esnext/index.js",
                "maintainers": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    }
                ],
                "name": "cson",
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/bevry/cson.git"
                },
                "scripts": {
                    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
                    "our:compile": "npm run our:compile:edition-esnext",
                    "our:compile:edition-esnext": "coffee -bco ./edition-esnext ./source",
                    "our:deploy": "echo no need for this project",
                    "our:meta": "npm run our:meta:projectz",
                    "our:meta:projectz": "projectz compile",
                    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
                    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
                    "our:release:check-dirty": "git diff --exit-code",
                    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
                    "our:release:push": "git push origin master && git push origin --tags",
                    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
                    "our:setup": "npm run our:setup:install",
                    "our:setup:install": "npm install",
                    "our:test": "npm run our:verify && npm test",
                    "our:verify": "npm run our:verify:coffeelint && npm run our:verify:directory",
                    "our:verify:coffeelint": "coffeelint ./source",
                    "our:verify:directory": "npx valid-directory",
                    "test": "node ./edition-esnext/test.js"
                },
                "title": "CSON",
                "type": "commonjs",
                "version": "6.9.0"
            },
            "source": {}
        },
        "cson-parser": {
            "lib": {},
            "node_modules": {
                "coffeescript": {
                    "bin": {},
                    "lib": {
                        "coffee-script": {}
                    },
                    "package": {
                        "_from": "coffeescript@^1.10.0",
                        "_id": "coffeescript@1.12.7",
                        "_inBundle": false,
                        "_integrity": "sha512-pLXHFxQMPklVoEekowk8b3erNynC+DVJzChxS/LCBBgR6/8AJkHivkm//zbowcfc7BTCAjryuhx6gPqPRfsFoA==",
                        "_location": "/cson-parser/coffeescript",
                        "_phantomChildren": {},
                        "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "coffeescript@^1.10.0",
                            "name": "coffeescript",
                            "escapedName": "coffeescript",
                            "rawSpec": "^1.10.0",
                            "saveSpec": null,
                            "fetchSpec": "^1.10.0"
                        },
                        "_requiredBy": [
                            "/cson-parser"
                        ],
                        "_resolved": "https://registry.npmjs.org/coffeescript/-/coffeescript-1.12.7.tgz",
                        "_shasum": "e57ee4c4867cf7f606bfc4a0f2d550c0981ddd27",
                        "_spec": "coffeescript@^1.10.0",
                        "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/cson-parser",
                        "author": {
                            "name": "Jeremy Ashkenas"
                        },
                        "bin": {
                            "coffee": "bin/coffee",
                            "cake": "bin/cake"
                        },
                        "bugs": {
                            "url": "https://github.com/jashkenas/coffeescript/issues"
                        },
                        "bundleDependencies": false,
                        "deprecated": false,
                        "description": "Unfancy JavaScript",
                        "devDependencies": {
                            "docco": "~0.7.0",
                            "google-closure-compiler-js": "^20170626.0.0",
                            "highlight.js": "~9.12.0",
                            "jison": ">=0.4.17",
                            "markdown-it": "^8.3.1",
                            "underscore": "~1.8.3"
                        },
                        "directories": {
                            "lib": "./lib/coffee-script"
                        },
                        "engines": {
                            "node": ">=0.8.0"
                        },
                        "files": [
                            "bin",
                            "lib",
                            "register.js",
                            "repl.js"
                        ],
                        "homepage": "http://coffeescript.org",
                        "keywords": [
                            "javascript",
                            "language",
                            "coffeescript",
                            "compiler"
                        ],
                        "license": "MIT",
                        "main": "./lib/coffee-script/coffee-script",
                        "name": "coffeescript",
                        "repository": {
                            "type": "git",
                            "url": "git://github.com/jashkenas/coffeescript.git"
                        },
                        "scripts": {
                            "test": "node ./bin/cake test",
                            "test-harmony": "node --harmony ./bin/cake test"
                        },
                        "version": "1.12.7"
                    }
                }
            },
            "package": {
                "_from": "cson-parser@^4.0.3",
                "_id": "cson-parser@4.0.4",
                "_inBundle": false,
                "_integrity": "sha512-veObnzR9fDs/+kvio0I+jeZXjsJ9jF0jtisl7g+z9J0YzlJ0UjCaGtbUd6JgKcfBlF7RSaSb7GMJYvGqp64pcg==",
                "_location": "/cson-parser",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "cson-parser@^4.0.3",
                    "name": "cson-parser",
                    "escapedName": "cson-parser",
                    "rawSpec": "^4.0.3",
                    "saveSpec": null,
                    "fetchSpec": "^4.0.3"
                },
                "_requiredBy": [
                    "/cson"
                ],
                "_resolved": "https://registry.npmjs.org/cson-parser/-/cson-parser-4.0.4.tgz",
                "_shasum": "272e45810523b2f50b3d14b526a9b0f36fb0d267",
                "_spec": "cson-parser@^4.0.3",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/cson",
                "author": {
                    "name": "Groupon",
                    "email": "opensource@groupon.com"
                },
                "bugs": {
                    "url": "https://github.com/groupon/cson-parser/issues"
                },
                "bundleDependencies": false,
                "dependencies": {
                    "coffeescript": "^1.10.0"
                },
                "deprecated": false,
                "description": "Safe parsing of CSON files",
                "devDependencies": {
                    "assertive": "^3.1.0",
                    "eslint": "^6.2.1",
                    "eslint-config-groupon": "^7.2.0",
                    "eslint-plugin-import": "^2.18.2",
                    "eslint-plugin-mocha": "^6.1.0",
                    "eslint-plugin-node": "^9.1.0",
                    "eslint-plugin-prettier": "^3.1.0",
                    "mocha": "^6.2.0",
                    "nlm": "^3.6.1",
                    "npm-run-all": "^4.1.5",
                    "prettier": "^1.18.2"
                },
                "engines": {
                    "node": ">=8",
                    "npm": "^6.0.0"
                },
                "files": [
                    "*.js",
                    "lib"
                ],
                "homepage": "https://github.com/groupon/cson-parser",
                "keywords": [
                    "cson",
                    "parser"
                ],
                "license": "BSD-3-Clause",
                "main": "lib/cson-parser.js",
                "name": "cson-parser",
                "nlm": {
                    "license": {
                        "files": [
                            "lib"
                        ]
                    }
                },
                "publishConfig": {
                    "registry": "https://registry.npmjs.org"
                },
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/groupon/cson-parser.git"
                },
                "scripts": {
                    "lint": "npm-run-all lint:*",
                    "lint:js": "eslint .",
                    "posttest": "npm-run-all posttest:*",
                    "posttest:nlm": "nlm verify",
                    "pretest": "npm-run-all pretest:*",
                    "pretest:lint": "npm-run-all lint:*",
                    "test": "npm-run-all test:*",
                    "test:unit": "mocha"
                },
                "types": "lib/typedefs.d.ts",
                "version": "4.0.4"
            }
        },
        "eachr": {
            "edition-browsers": {},
            "package": {
                "_from": "eachr@^4.5.0",
                "_id": "eachr@4.5.0",
                "_inBundle": false,
                "_integrity": "sha512-9I664RWp6p8jvcHZIwo7bWaiSaUmA1wNSLKwNZEiaYjqiTARq3cGjyRiIunsopZv4QMmX3T5Hs17QoPAzdYxfg==",
                "_location": "/eachr",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "eachr@^4.5.0",
                    "name": "eachr",
                    "escapedName": "eachr",
                    "rawSpec": "^4.5.0",
                    "saveSpec": null,
                    "fetchSpec": "^4.5.0"
                },
                "_requiredBy": [
                    "/extract-opts"
                ],
                "_resolved": "https://registry.npmjs.org/eachr/-/eachr-4.5.0.tgz",
                "_shasum": "495eb3aab6a41811da1e04e510424df32075cf04",
                "_spec": "eachr@^4.5.0",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/extract-opts",
                "author": {
                    "name": "2011+ Bevry Pty Ltd",
                    "email": "us@bevry.me",
                    "url": "http://bevry.me"
                },
                "babel": {
                    "env": {
                        "edition-browsers": {
                            "sourceType": "script",
                            "presets": [
                                [
                                    "@babel/preset-env",
                                    {
                                        "targets": "defaults",
                                        "modules": false
                                    }
                                ]
                            ],
                            "plugins": [
                                "@babel/proposal-object-rest-spread"
                            ]
                        }
                    }
                },
                "badges": {
                    "list": [
                        "travisci",
                        "npmversion",
                        "npmdownloads",
                        "daviddm",
                        "daviddmdev",
                        "---",
                        "githubsponsors",
                        "patreon",
                        "flattr",
                        "liberapay",
                        "buymeacoffee",
                        "opencollective",
                        "crypto",
                        "paypal",
                        "wishlist"
                    ],
                    "config": {
                        "githubSponsorsUsername": "balupton",
                        "buymeacoffeeUsername": "balupton",
                        "cryptoURL": "https://bevry.me/crypto",
                        "flattrUsername": "balupton",
                        "liberapayUsername": "bevry",
                        "opencollectiveUsername": "bevry",
                        "patreonUsername": "bevry",
                        "paypalURL": "https://bevry.me/paypal",
                        "wishlistURL": "https://bevry.me/wishlist",
                        "travisTLD": "com"
                    }
                },
                "browser": "edition-browsers/index.js",
                "bugs": {
                    "url": "https://github.com/bevry/eachr/issues"
                },
                "bundleDependencies": false,
                "contributors": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    },
                    {
                        "name": "Sean Fridman",
                        "email": "fridman@mail.sfsu.edu",
                        "url": "www.seanfridman.com"
                    },
                    {
                        "name": "Rob Loach",
                        "email": "robloach@gmail.com",
                        "url": "http://robloach.net"
                    },
                    {
                        "name": "Sean Fridman",
                        "email": "mail@seanfridman.com",
                        "url": "http://seanfridman.com"
                    },
                    {
                        "name": "dependabot-preview[bot]",
                        "url": "http://github.com/apps/dependabot-preview"
                    }
                ],
                "dependencies": {
                    "typechecker": "^6.2.0"
                },
                "deprecated": false,
                "description": "Give eachr an item to iterate (array, object or map) and an iterator, then in return eachr gives iterator the value and key of each item, and will stop if the iterator returned false.",
                "devDependencies": {
                    "@babel/cli": "^7.7.5",
                    "@babel/core": "^7.7.5",
                    "@babel/plugin-proposal-object-rest-spread": "^7.7.4",
                    "@babel/preset-env": "^7.7.6",
                    "assert-helpers": "^5.8.0",
                    "eslint": "^6.7.2",
                    "eslint-config-bevry": "^2.2.0",
                    "eslint-config-prettier": "^6.7.0",
                    "eslint-plugin-babel": "^5.3.0",
                    "eslint-plugin-prettier": "^3.1.1",
                    "kava": "^4.3.0",
                    "prettier": "^1.19.1",
                    "projectz": "^1.15.0",
                    "semver": "^6.3.0",
                    "valid-directory": "^1.5.0"
                },
                "editions": [
                    {
                        "description": "esnext source code with require for modules",
                        "directory": "source",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "esnext",
                            "require"
                        ],
                        "engines": {
                            "node": "8 || 10 || 12",
                            "browsers": false
                        }
                    },
                    {
                        "description": "esnext compiled for browsers with require for modules",
                        "directory": "edition-browsers",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "require"
                        ],
                        "engines": {
                            "node": false,
                            "browsers": "defaults"
                        }
                    }
                ],
                "engines": {
                    "node": ">=8"
                },
                "eslintConfig": {
                    "extends": [
                        "bevry"
                    ]
                },
                "funding": "https://bevry.me/fund",
                "homepage": "https://github.com/bevry/eachr",
                "keywords": [
                    "flow",
                    "each",
                    "cycle",
                    "forEach",
                    "map",
                    "object",
                    "array"
                ],
                "license": "MIT",
                "main": "source/index.js",
                "maintainers": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    }
                ],
                "name": "eachr",
                "prettier": {
                    "semi": false,
                    "singleQuote": true
                },
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/bevry/eachr.git"
                },
                "scripts": {
                    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
                    "our:compile": "npm run our:compile:edition-browsers",
                    "our:compile:edition-browsers": "env BABEL_ENV=edition-browsers babel --out-dir ./edition-browsers ./source",
                    "our:deploy": "echo no need for this project",
                    "our:meta": "npm run our:meta:projectz",
                    "our:meta:projectz": "projectz compile",
                    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
                    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
                    "our:release:check-dirty": "git diff --exit-code",
                    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
                    "our:release:push": "git push origin master && git push origin --tags",
                    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
                    "our:setup": "npm run our:setup:install",
                    "our:setup:install": "npm install",
                    "our:test": "npm run our:verify && npm test",
                    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:prettier",
                    "our:verify:directory": "npx valid-directory",
                    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
                    "our:verify:prettier": "prettier --write ./source/**",
                    "test": "node ./source/test.js"
                },
                "type": "commonjs",
                "version": "4.5.0"
            },
            "source": {}
        },
        "extract-opts": {
            "edition-browsers": {},
            "package": {
                "_from": "extract-opts@^4.3.0",
                "_id": "extract-opts@4.3.0",
                "_inBundle": false,
                "_integrity": "sha512-Dmssi1tgKJkQsVmbP7TgW/kbdc42SAsNf6h9ClweP+dS7O24YYMTXsNwPelxhx0LF15npiWwY5ahKtyQiNgxWA==",
                "_location": "/extract-opts",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "extract-opts@^4.3.0",
                    "name": "extract-opts",
                    "escapedName": "extract-opts",
                    "rawSpec": "^4.3.0",
                    "saveSpec": null,
                    "fetchSpec": "^4.3.0"
                },
                "_requiredBy": [
                    "/cson"
                ],
                "_resolved": "https://registry.npmjs.org/extract-opts/-/extract-opts-4.3.0.tgz",
                "_shasum": "ee0a797249abb77e449bdaaba66ebeff4775505e",
                "_spec": "extract-opts@^4.3.0",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/cson",
                "author": {
                    "name": "2013+ Bevry Pty Ltd",
                    "email": "us@bevry.me",
                    "url": "http://bevry.me"
                },
                "babel": {
                    "env": {
                        "edition-browsers": {
                            "sourceType": "script",
                            "presets": [
                                [
                                    "@babel/preset-env",
                                    {
                                        "targets": "defaults",
                                        "modules": false
                                    }
                                ]
                            ],
                            "plugins": [
                                "@babel/proposal-object-rest-spread"
                            ]
                        }
                    }
                },
                "badges": {
                    "list": [
                        "travisci",
                        "npmversion",
                        "npmdownloads",
                        "daviddm",
                        "daviddmdev",
                        "---",
                        "githubsponsors",
                        "patreon",
                        "flattr",
                        "liberapay",
                        "buymeacoffee",
                        "opencollective",
                        "crypto",
                        "paypal",
                        "wishlist"
                    ],
                    "config": {
                        "githubSponsorsUsername": "balupton",
                        "buymeacoffeeUsername": "balupton",
                        "cryptoURL": "https://bevry.me/crypto",
                        "flattrUsername": "balupton",
                        "liberapayUsername": "bevry",
                        "opencollectiveUsername": "bevry",
                        "patreonUsername": "bevry",
                        "paypalURL": "https://bevry.me/paypal",
                        "wishlistURL": "https://bevry.me/wishlist",
                        "travisTLD": "com"
                    }
                },
                "browser": "edition-browsers/index.js",
                "bugs": {
                    "url": "https://github.com/bevry/extract-opts/issues"
                },
                "bundleDependencies": false,
                "contributors": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    },
                    {
                        "name": "Sean Fridman",
                        "email": "mail@seanfridman.com",
                        "url": "http://seanfridman.com"
                    },
                    {
                        "name": "Matt Bierner",
                        "url": "http://mattbierner.com"
                    },
                    {
                        "name": "dependabot-preview[bot]",
                        "url": "http://github.com/apps/dependabot-preview"
                    }
                ],
                "dependencies": {
                    "eachr": "^4.5.0",
                    "typechecker": "^6.2.0"
                },
                "deprecated": false,
                "description": "Extract the options and callback from a function's arguments easily",
                "devDependencies": {
                    "@babel/cli": "^7.7.5",
                    "@babel/core": "^7.7.5",
                    "@babel/plugin-proposal-object-rest-spread": "^7.7.4",
                    "@babel/preset-env": "^7.7.6",
                    "assert-helpers": "^5.8.0",
                    "eachr": "^4.5.0",
                    "eslint": "^6.7.2",
                    "eslint-config-bevry": "^2.2.0",
                    "eslint-config-prettier": "^6.7.0",
                    "eslint-plugin-babel": "^5.3.0",
                    "eslint-plugin-prettier": "^3.1.1",
                    "kava": "^4.3.0",
                    "prettier": "^1.19.1",
                    "projectz": "^1.15.0",
                    "valid-directory": "^1.5.0"
                },
                "editions": [
                    {
                        "description": "esnext source code with require for modules",
                        "directory": "source",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "esnext",
                            "require"
                        ],
                        "engines": {
                            "node": "8 || 10 || 12",
                            "browsers": false
                        }
                    },
                    {
                        "description": "esnext compiled for browsers with require for modules",
                        "directory": "edition-browsers",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "require"
                        ],
                        "engines": {
                            "node": false,
                            "browsers": "defaults"
                        }
                    }
                ],
                "engines": {
                    "node": ">=8"
                },
                "eslintConfig": {
                    "extends": [
                        "bevry"
                    ]
                },
                "funding": "https://bevry.me/fund",
                "homepage": "https://github.com/bevry/extract-opts",
                "keywords": [
                    "opts",
                    "options",
                    "cb",
                    "callback",
                    "next",
                    "flow",
                    "args",
                    "optional",
                    "arguments",
                    "extract"
                ],
                "license": "MIT",
                "main": "source/index.js",
                "maintainers": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    }
                ],
                "name": "extract-opts",
                "prettier": {
                    "semi": false,
                    "singleQuote": true
                },
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/bevry/extract-opts.git"
                },
                "scripts": {
                    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
                    "our:compile": "npm run our:compile:edition-browsers",
                    "our:compile:edition-browsers": "env BABEL_ENV=edition-browsers babel --out-dir ./edition-browsers ./source",
                    "our:deploy": "echo no need for this project",
                    "our:meta": "npm run our:meta:projectz",
                    "our:meta:projectz": "projectz compile",
                    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
                    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
                    "our:release:check-dirty": "git diff --exit-code",
                    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
                    "our:release:push": "git push origin master && git push origin --tags",
                    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
                    "our:setup": "npm run our:setup:install",
                    "our:setup:install": "npm install",
                    "our:test": "npm run our:verify && npm test",
                    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:prettier",
                    "our:verify:directory": "npx valid-directory",
                    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
                    "our:verify:prettier": "prettier --write ./source/**",
                    "test": "node ./source/test.js"
                },
                "title": "Extract Options & Callback",
                "type": "commonjs",
                "version": "4.3.0"
            },
            "source": {}
        },
        "fs": {
            "package": {
                "_from": "fs",
                "_id": "fs@0.0.1-security",
                "_inBundle": false,
                "_integrity": "sha1-invTcYa23d84E/I4WLV+yq9eQdQ=",
                "_location": "/fs",
                "_phantomChildren": {},
                "_requested": {
                    "type": "tag",
                    "registry": true,
                    "raw": "fs",
                    "name": "fs",
                    "escapedName": "fs",
                    "rawSpec": "",
                    "saveSpec": null,
                    "fetchSpec": "latest"
                },
                "_requiredBy": [
                    "#USER",
                    "/"
                ],
                "_resolved": "https://registry.npmjs.org/fs/-/fs-0.0.1-security.tgz",
                "_shasum": "8a7bd37186b6dddf3813f23858b57ecaaf5e41d4",
                "_spec": "fs",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources",
                "author": "",
                "bugs": {
                    "url": "https://github.com/npm/security-holder/issues"
                },
                "bundleDependencies": false,
                "deprecated": false,
                "description": "This package name is not currently in use, but was formerly occupied by another package. To avoid malicious use, npm is hanging on to the package name, but loosely, and we'll probably give it to you if you want it.",
                "homepage": "https://github.com/npm/security-holder#readme",
                "keywords": [],
                "license": "ISC",
                "main": "index.js",
                "name": "fs",
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/npm/security-holder.git"
                },
                "scripts": {
                    "test": "echo \"Error: no test specified\" && exit 1"
                },
                "version": "0.0.1-security"
            }
        },
        "graceful-fs": {
            "package": {
                "_from": "graceful-fs@^4.2.3",
                "_id": "graceful-fs@4.2.3",
                "_inBundle": false,
                "_integrity": "sha512-a30VEBm4PEdx1dRB7MFK7BejejvCvBronbLjht+sHuGYj8PHs7M/5Z+rt5lw551vZ7yfTCj4Vuyy3mSJytDWRQ==",
                "_location": "/graceful-fs",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "graceful-fs@^4.2.3",
                    "name": "graceful-fs",
                    "escapedName": "graceful-fs",
                    "rawSpec": "^4.2.3",
                    "saveSpec": null,
                    "fetchSpec": "^4.2.3"
                },
                "_requiredBy": [
                    "/safefs"
                ],
                "_resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.3.tgz",
                "_shasum": "4a12ff1b60376ef09862c2093edd908328be8423",
                "_spec": "graceful-fs@^4.2.3",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/safefs",
                "bugs": {
                    "url": "https://github.com/isaacs/node-graceful-fs/issues"
                },
                "bundleDependencies": false,
                "dependencies": {},
                "deprecated": false,
                "description": "A drop-in replacement for fs, making various improvements.",
                "devDependencies": {
                    "import-fresh": "^2.0.0",
                    "mkdirp": "^0.5.0",
                    "rimraf": "^2.2.8",
                    "tap": "^12.7.0"
                },
                "directories": {
                    "test": "test"
                },
                "files": [
                    "fs.js",
                    "graceful-fs.js",
                    "legacy-streams.js",
                    "polyfills.js",
                    "clone.js"
                ],
                "homepage": "https://github.com/isaacs/node-graceful-fs#readme",
                "keywords": [
                    "fs",
                    "module",
                    "reading",
                    "retry",
                    "retries",
                    "queue",
                    "error",
                    "errors",
                    "handling",
                    "EMFILE",
                    "EAGAIN",
                    "EINVAL",
                    "EPERM",
                    "EACCESS"
                ],
                "license": "ISC",
                "main": "graceful-fs.js",
                "name": "graceful-fs",
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/isaacs/node-graceful-fs.git"
                },
                "scripts": {
                    "postpublish": "git push origin --follow-tags",
                    "postversion": "npm publish",
                    "preversion": "npm test",
                    "test": "node test.js | tap -"
                },
                "version": "4.2.3"
            }
        },
        "inherits": {
            "package": {
                "_from": "inherits@2.0.3",
                "_id": "inherits@2.0.3",
                "_inBundle": false,
                "_integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
                "_location": "/inherits",
                "_phantomChildren": {},
                "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "inherits@2.0.3",
                    "name": "inherits",
                    "escapedName": "inherits",
                    "rawSpec": "2.0.3",
                    "saveSpec": null,
                    "fetchSpec": "2.0.3"
                },
                "_requiredBy": [
                    "/util"
                ],
                "_resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
                "_shasum": "633c2c83e3da42a502f52466022480f4208261de",
                "_spec": "inherits@2.0.3",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/util",
                "browser": "./inherits_browser.js",
                "bugs": {
                    "url": "https://github.com/isaacs/inherits/issues"
                },
                "bundleDependencies": false,
                "deprecated": false,
                "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
                "devDependencies": {
                    "tap": "^7.1.0"
                },
                "files": [
                    "inherits.js",
                    "inherits_browser.js"
                ],
                "homepage": "https://github.com/isaacs/inherits#readme",
                "keywords": [
                    "inheritance",
                    "class",
                    "klass",
                    "oop",
                    "object-oriented",
                    "inherits",
                    "browser",
                    "browserify"
                ],
                "license": "ISC",
                "main": "./inherits.js",
                "name": "inherits",
                "repository": {
                    "type": "git",
                    "url": "git://github.com/isaacs/inherits.git"
                },
                "scripts": {
                    "test": "node test"
                },
                "version": "2.0.3"
            }
        },
        "path": {
            "package": {
                "_from": "path",
                "_id": "path@0.12.7",
                "_inBundle": false,
                "_integrity": "sha1-1NwqUGxM4hl+tIHr/NWzbAFAsQ8=",
                "_location": "/path",
                "_phantomChildren": {},
                "_requested": {
                    "type": "tag",
                    "registry": true,
                    "raw": "path",
                    "name": "path",
                    "escapedName": "path",
                    "rawSpec": "",
                    "saveSpec": null,
                    "fetchSpec": "latest"
                },
                "_requiredBy": [
                    "#USER",
                    "/"
                ],
                "_resolved": "https://registry.npmjs.org/path/-/path-0.12.7.tgz",
                "_shasum": "d4dc2a506c4ce2197eb481ebfcd5b36c0140b10f",
                "_spec": "path",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources",
                "author": {
                    "name": "Joyent",
                    "url": "http://www.joyent.com"
                },
                "bugs": {
                    "url": "https://github.com/jinder/path/issues"
                },
                "bundleDependencies": false,
                "dependencies": {
                    "process": "^0.11.1",
                    "util": "^0.10.3"
                },
                "deprecated": false,
                "description": "Node.JS path module",
                "homepage": "http://nodejs.org/docs/latest/api/path.html",
                "keywords": [
                    "ender",
                    "path"
                ],
                "license": "MIT",
                "main": "./path.js",
                "name": "path",
                "repository": {
                    "type": "git",
                    "url": "git://github.com/jinder/path.git"
                },
                "version": "0.12.7"
            }
        },
        "process": {
            "package": {
                "_from": "process@^0.11.1",
                "_id": "process@0.11.10",
                "_inBundle": false,
                "_integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI=",
                "_location": "/process",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "process@^0.11.1",
                    "name": "process",
                    "escapedName": "process",
                    "rawSpec": "^0.11.1",
                    "saveSpec": null,
                    "fetchSpec": "^0.11.1"
                },
                "_requiredBy": [
                    "/path"
                ],
                "_resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
                "_shasum": "7332300e840161bda3e69a1d1d91a7d4bc16f182",
                "_spec": "process@^0.11.1",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/path",
                "author": {
                    "name": "Roman Shtylman",
                    "email": "shtylman@gmail.com"
                },
                "browser": "./browser.js",
                "bugs": {
                    "url": "https://github.com/shtylman/node-process/issues"
                },
                "bundleDependencies": false,
                "deprecated": false,
                "description": "process information for node.js and browsers",
                "devDependencies": {
                    "mocha": "2.2.1",
                    "zuul": "^3.10.3"
                },
                "engines": {
                    "node": ">= 0.6.0"
                },
                "homepage": "https://github.com/shtylman/node-process#readme",
                "keywords": [
                    "process"
                ],
                "license": "MIT",
                "main": "./index.js",
                "name": "process",
                "repository": {
                    "type": "git",
                    "url": "git://github.com/shtylman/node-process.git"
                },
                "scripts": {
                    "browser": "zuul --no-coverage --ui mocha-bdd --local 8080 -- test.js",
                    "test": "mocha test.js"
                },
                "version": "0.11.10"
            }
        },
        "requirefresh": {
            "package": {
                "_from": "requirefresh@^3.3.0",
                "_id": "requirefresh@3.3.0",
                "_inBundle": false,
                "_integrity": "sha512-6IPvbg29edHMtnElBN9p6Qy8uFuOcOEisHOmS+p+EUKDiHhcLx8ehJdwHrXhY4CF/4GBiZx0hfN9mbcJ0TMgEA==",
                "_location": "/requirefresh",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "requirefresh@^3.3.0",
                    "name": "requirefresh",
                    "escapedName": "requirefresh",
                    "rawSpec": "^3.3.0",
                    "saveSpec": null,
                    "fetchSpec": "^3.3.0"
                },
                "_requiredBy": [
                    "/cson"
                ],
                "_resolved": "https://registry.npmjs.org/requirefresh/-/requirefresh-3.3.0.tgz",
                "_shasum": "11df16d1bd7c1a5ec003f2d4367939b9f8ff8c18",
                "_spec": "requirefresh@^3.3.0",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/cson",
                "author": {
                    "name": "2013+ Bevry Pty Ltd",
                    "email": "us@bevry.me",
                    "url": "http://bevry.me"
                },
                "badges": {
                    "list": [
                        "travisci",
                        "npmversion",
                        "npmdownloads",
                        "daviddm",
                        "daviddmdev",
                        "---",
                        "githubsponsors",
                        "patreon",
                        "flattr",
                        "liberapay",
                        "buymeacoffee",
                        "opencollective",
                        "crypto",
                        "paypal",
                        "wishlist"
                    ],
                    "config": {
                        "githubSponsorsUsername": "balupton",
                        "buymeacoffeeUsername": "balupton",
                        "cryptoURL": "https://bevry.me/crypto",
                        "flattrUsername": "balupton",
                        "liberapayUsername": "bevry",
                        "opencollectiveUsername": "bevry",
                        "patreonUsername": "bevry",
                        "paypalURL": "https://bevry.me/paypal",
                        "wishlistURL": "https://bevry.me/wishlist",
                        "travisTLD": "com"
                    }
                },
                "bugs": {
                    "url": "https://github.com/bevry/requirefresh/issues"
                },
                "bundleDependencies": false,
                "contributors": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    },
                    {
                        "name": "Sean Fridman",
                        "email": "mail@seanfridman.com",
                        "url": "http://seanfridman.com"
                    },
                    {
                        "name": "dependabot-preview[bot]",
                        "url": "http://github.com/apps/dependabot-preview"
                    }
                ],
                "deprecated": false,
                "description": "Require a file without adding it into the require cache",
                "devDependencies": {
                    "assert-helpers": "^5.8.0",
                    "eslint": "^6.7.2",
                    "eslint-config-bevry": "^2.3.0",
                    "eslint-config-prettier": "^6.7.0",
                    "eslint-plugin-babel": "^5.3.0",
                    "eslint-plugin-prettier": "^3.1.1",
                    "jsdoc": "^3.6.3",
                    "kava": "^4.4.0",
                    "minami": "^1.2.3",
                    "prettier": "^1.19.1",
                    "projectz": "^1.16.0",
                    "surge": "^0.21.3",
                    "valid-directory": "^1.5.0"
                },
                "editions": [
                    {
                        "description": "esnext source code with require for modules",
                        "directory": "source",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "esnext",
                            "require"
                        ],
                        "engines": {
                            "node": "8 || 10 || 12"
                        }
                    }
                ],
                "engines": {
                    "node": ">=8"
                },
                "eslintConfig": {
                    "extends": [
                        "bevry"
                    ]
                },
                "funding": "https://bevry.me/fund",
                "homepage": "https://github.com/bevry/requirefresh",
                "keywords": [
                    "require",
                    "requirefresh",
                    "require-fresh",
                    "cache"
                ],
                "license": "MIT",
                "main": "source/index.js",
                "maintainers": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    }
                ],
                "name": "requirefresh",
                "prettier": {
                    "semi": false,
                    "singleQuote": true
                },
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/bevry/requirefresh.git"
                },
                "scripts": {
                    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
                    "our:compile": "echo no need for this project",
                    "our:deploy": "echo no need for this project",
                    "our:meta": "npm run our:meta:docs && npm run our:meta:projectz",
                    "our:meta:docs": "npm run our:meta:docs:jsdoc",
                    "our:meta:docs:jsdoc": "rm -Rf ./docs && jsdoc --recurse --pedantic --access all --destination ./docs --package ./package.json --readme ./README.md --template ./node_modules/minami ./source && mv ./docs/$npm_package_name/$npm_package_version/* ./docs/ && rm -Rf ./docs/$npm_package_name/$npm_package_version",
                    "our:meta:projectz": "projectz compile",
                    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
                    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
                    "our:release:check-dirty": "git diff --exit-code",
                    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
                    "our:release:push": "git push origin master && git push origin --tags",
                    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
                    "our:setup": "npm run our:setup:install",
                    "our:setup:install": "npm install",
                    "our:test": "npm run our:verify && npm test",
                    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:prettier",
                    "our:verify:directory": "npx valid-directory",
                    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
                    "our:verify:prettier": "prettier --write ./source/**",
                    "test": "node ./source/test.js"
                },
                "title": "Require Fresh",
                "type": "commonjs",
                "version": "3.3.0"
            },
            "source": {}
        },
        "safefs": {
            "package": {
                "_from": "safefs@^5.5.0",
                "_id": "safefs@5.5.0",
                "_inBundle": false,
                "_integrity": "sha512-I8wa7h8Z9OpyULYkEiQoUEtAvPOlsvmYSmD2PD0hVUs4Hhr5BHor8NDSg3qWikIba0+yz3xww0IrLvzCstYVFQ==",
                "_location": "/safefs",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "safefs@^5.5.0",
                    "name": "safefs",
                    "escapedName": "safefs",
                    "rawSpec": "^5.5.0",
                    "saveSpec": null,
                    "fetchSpec": "^5.5.0"
                },
                "_requiredBy": [
                    "/cson"
                ],
                "_resolved": "https://registry.npmjs.org/safefs/-/safefs-5.5.0.tgz",
                "_shasum": "17506b894542c592b33379578177bbab9f06c085",
                "_spec": "safefs@^5.5.0",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/cson",
                "author": {
                    "name": "2013+ Bevry Pty Ltd",
                    "email": "us@bevry.me",
                    "url": "http://bevry.me"
                },
                "badges": {
                    "list": [
                        "travisci",
                        "npmversion",
                        "npmdownloads",
                        "daviddm",
                        "daviddmdev",
                        "---",
                        "githubsponsors",
                        "patreon",
                        "flattr",
                        "liberapay",
                        "buymeacoffee",
                        "opencollective",
                        "crypto",
                        "paypal",
                        "wishlist"
                    ],
                    "config": {
                        "githubSponsorsUsername": "balupton",
                        "buymeacoffeeUsername": "balupton",
                        "cryptoURL": "https://bevry.me/crypto",
                        "flattrUsername": "balupton",
                        "liberapayUsername": "bevry",
                        "opencollectiveUsername": "bevry",
                        "patreonUsername": "bevry",
                        "paypalURL": "https://bevry.me/paypal",
                        "wishlistURL": "https://bevry.me/wishlist",
                        "travisTLD": "com"
                    }
                },
                "bugs": {
                    "url": "https://github.com/bevry/safefs/issues"
                },
                "bundleDependencies": false,
                "contributors": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    },
                    {
                        "name": "James Gill",
                        "url": "http://www.linkedin.com/in/jagill/"
                    },
                    {
                        "name": "Sean Fridman",
                        "email": "mail@seanfridman.com",
                        "url": "http://seanfridman.com"
                    },
                    {
                        "name": "Kyle Robinson Young",
                        "url": "http://dontkry.com"
                    },
                    {
                        "name": "dependabot-preview[bot]",
                        "url": "http://github.com/apps/dependabot-preview"
                    }
                ],
                "dependencies": {
                    "graceful-fs": "^4.2.3"
                },
                "deprecated": false,
                "description": "Stop getting EMFILE errors! Open only as many files as the operating system supports.",
                "devDependencies": {
                    "assert-helpers": "^5.8.0",
                    "eslint": "^6.7.2",
                    "eslint-config-bevry": "^2.3.0",
                    "eslint-config-prettier": "^6.7.0",
                    "eslint-plugin-babel": "^5.3.0",
                    "eslint-plugin-prettier": "^3.1.1",
                    "kava": "^4.4.0",
                    "prettier": "^1.19.1",
                    "projectz": "^1.16.0",
                    "rimraf": "^3.0.0",
                    "valid-directory": "^1.5.0"
                },
                "editions": [
                    {
                        "description": "esnext source code with require for modules",
                        "directory": "source",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "esnext",
                            "require"
                        ],
                        "engines": {
                            "node": "8 || 10 || 12"
                        }
                    }
                ],
                "engines": {
                    "node": ">=8"
                },
                "eslintConfig": {
                    "extends": [
                        "bevry"
                    ]
                },
                "funding": "https://bevry.me/fund",
                "homepage": "https://github.com/bevry/safefs",
                "keywords": [
                    "fs",
                    "path",
                    "openFile",
                    "closeFile",
                    "emfile"
                ],
                "license": "MIT",
                "main": "source/index.js",
                "maintainers": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    }
                ],
                "name": "safefs",
                "prettier": {
                    "semi": false,
                    "singleQuote": true
                },
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/bevry/safefs.git"
                },
                "scripts": {
                    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
                    "our:compile": "echo no need for this project",
                    "our:deploy": "echo no need for this project",
                    "our:meta": "npm run our:meta:projectz",
                    "our:meta:projectz": "projectz compile",
                    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
                    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
                    "our:release:check-dirty": "git diff --exit-code",
                    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
                    "our:release:push": "git push origin master && git push origin --tags",
                    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
                    "our:setup": "npm run our:setup:install",
                    "our:setup:install": "npm install",
                    "our:test": "npm run our:verify && npm test",
                    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:prettier",
                    "our:verify:directory": "npx valid-directory",
                    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
                    "our:verify:prettier": "prettier --write ./source/**",
                    "test": "node ./source/test.js"
                },
                "title": "Safe FS",
                "type": "commonjs",
                "version": "5.5.0"
            },
            "source": {}
        },
        "typechecker": {
            "edition-browsers": {},
            "edition-node-12": {},
            "fixtures": {},
            "package": {
                "_from": "typechecker@^6.2.0",
                "_id": "typechecker@6.3.0",
                "_inBundle": false,
                "_integrity": "sha512-XZmZISfAzrzGHaC2nAwXyh/O1srpTIw/sFS5K0wGRIoWgc+bpGXJLkpI5VoZg9+2SwV6tFIS3WCb3l0bNitLag==",
                "_location": "/typechecker",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "typechecker@^6.2.0",
                    "name": "typechecker",
                    "escapedName": "typechecker",
                    "rawSpec": "^6.2.0",
                    "saveSpec": null,
                    "fetchSpec": "^6.2.0"
                },
                "_requiredBy": [
                    "/eachr",
                    "/extract-opts"
                ],
                "_resolved": "https://registry.npmjs.org/typechecker/-/typechecker-6.3.0.tgz",
                "_shasum": "c8ee2fee30e1d1156d3063efb9d115c859c3cf5b",
                "_spec": "typechecker@^6.2.0",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/extract-opts",
                "author": {
                    "name": "2013+ Bevry Pty Ltd",
                    "email": "us@bevry.me",
                    "url": "http://bevry.me"
                },
                "babel": {
                    "env": {
                        "edition-browsers": {
                            "sourceType": "module",
                            "presets": [
                                [
                                    "@babel/preset-env",
                                    {
                                        "targets": "defaults",
                                        "modules": "commonjs"
                                    }
                                ],
                                "@babel/preset-typescript"
                            ],
                            "plugins": [
                                "@babel/proposal-object-rest-spread",
                                "@babel/plugin-proposal-optional-chaining",
                                "@babel/proposal-class-properties",
                                "add-module-exports"
                            ]
                        },
                        "edition-node-12": {
                            "sourceType": "module",
                            "presets": [
                                [
                                    "@babel/preset-env",
                                    {
                                        "targets": {
                                            "node": "12"
                                        },
                                        "modules": "commonjs"
                                    }
                                ],
                                "@babel/preset-typescript"
                            ],
                            "plugins": [
                                "@babel/proposal-object-rest-spread",
                                "@babel/plugin-proposal-optional-chaining",
                                "@babel/proposal-class-properties",
                                "add-module-exports"
                            ]
                        }
                    }
                },
                "badges": {
                    "list": [
                        "travisci",
                        "npmversion",
                        "npmdownloads",
                        "daviddm",
                        "daviddmdev",
                        "---",
                        "githubsponsors",
                        "patreon",
                        "flattr",
                        "liberapay",
                        "buymeacoffee",
                        "opencollective",
                        "crypto",
                        "paypal",
                        "wishlist"
                    ],
                    "config": {
                        "githubSponsorsUsername": "balupton",
                        "buymeacoffeeUsername": "balupton",
                        "cryptoURL": "https://bevry.me/crypto",
                        "flattrUsername": "balupton",
                        "liberapayUsername": "bevry",
                        "opencollectiveUsername": "bevry",
                        "patreonUsername": "bevry",
                        "paypalURL": "https://bevry.me/paypal",
                        "wishlistURL": "https://bevry.me/wishlist",
                        "travisTLD": "com"
                    }
                },
                "browser": "edition-browsers/index.js",
                "bugs": {
                    "url": "https://github.com/bevry/typechecker/issues"
                },
                "bundleDependencies": false,
                "contributors": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    },
                    {
                        "name": "Joe Gesualdo",
                        "email": "joegesualdo@gmail.com",
                        "url": "joegesualdo.com"
                    },
                    {
                        "name": "Sean Fridman",
                        "email": "mail@seanfridman.com",
                        "url": "http://seanfridman.com"
                    },
                    {
                        "name": "Matt Bierner",
                        "url": "http://mattbierner.com"
                    },
                    {
                        "name": "dependabot-preview[bot]",
                        "url": "http://github.com/apps/dependabot-preview"
                    }
                ],
                "deprecated": false,
                "description": "Utilities to get and check variable types (isString, isPlainObject, isRegExp, etc)",
                "devDependencies": {
                    "@babel/cli": "^7.7.5",
                    "@babel/core": "^7.7.5",
                    "@babel/plugin-proposal-class-properties": "^7.7.4",
                    "@babel/plugin-proposal-object-rest-spread": "^7.7.4",
                    "@babel/plugin-proposal-optional-chaining": "^7.7.5",
                    "@babel/preset-env": "^7.7.6",
                    "@babel/preset-typescript": "^7.7.4",
                    "@typescript-eslint/eslint-plugin": "^2.11.0",
                    "@typescript-eslint/parser": "^2.11.0",
                    "assert-helpers": "^5.8.0",
                    "babel-plugin-add-module-exports": "^1.0.2",
                    "eslint": "^6.7.2",
                    "eslint-config-bevry": "^2.3.0",
                    "eslint-config-prettier": "^6.7.0",
                    "eslint-plugin-prettier": "^3.1.1",
                    "kava": "^4.4.0",
                    "prettier": "^1.19.1",
                    "projectz": "^1.16.0",
                    "surge": "^0.21.3",
                    "typedoc": "^0.15.4",
                    "typescript": "^3.7.3",
                    "valid-directory": "^1.5.0"
                },
                "editions": [
                    {
                        "description": "typescript source code with import for modules",
                        "directory": "source",
                        "entry": "index.ts",
                        "tags": [
                            "typescript",
                            "import"
                        ],
                        "engines": false
                    },
                    {
                        "description": "typescript compiled for browsers with import for modules",
                        "directory": "edition-browsers",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "import"
                        ],
                        "engines": {
                            "node": false,
                            "browsers": "defaults"
                        }
                    },
                    {
                        "description": "typescript compiled for node.js 12 with require for modules",
                        "directory": "edition-node-12",
                        "entry": "index.js",
                        "tags": [
                            "javascript",
                            "require"
                        ],
                        "engines": {
                            "node": "8 || 10 || 12",
                            "browsers": false
                        }
                    }
                ],
                "engines": {
                    "node": ">=8"
                },
                "eslintConfig": {
                    "extends": [
                        "bevry"
                    ]
                },
                "funding": "https://bevry.me/fund",
                "homepage": "https://github.com/bevry/typechecker",
                "keywords": [
                    "array",
                    "assert",
                    "assertion",
                    "async function",
                    "async-function",
                    "async",
                    "asyncFunction",
                    "bool",
                    "boolean",
                    "check-type",
                    "check",
                    "checking",
                    "class-identifier",
                    "class-instance",
                    "class",
                    "compare",
                    "conventional class",
                    "conventional-class",
                    "conventionalClass",
                    "date",
                    "define-type",
                    "empty array",
                    "empty keys",
                    "empty map",
                    "empty plain object",
                    "empty-array",
                    "empty-keys",
                    "empty-map",
                    "empty-plain-object",
                    "empty",
                    "emptyArray",
                    "emptyKeys",
                    "emptyMap",
                    "emptyPlainObject",
                    "error",
                    "function",
                    "get object type",
                    "get type",
                    "get-object-type",
                    "get-type",
                    "getObjectType",
                    "getType",
                    "instanceof",
                    "is arguments",
                    "is array",
                    "is async function",
                    "is async",
                    "is bool",
                    "is boolean",
                    "is class",
                    "is conventional class",
                    "is date",
                    "is empty array",
                    "is empty keys",
                    "is empty map",
                    "is empty plain object",
                    "is empty weak map",
                    "is error",
                    "is function",
                    "is map",
                    "is native class",
                    "is null",
                    "is nullish",
                    "is number",
                    "is object",
                    "is plain object",
                    "is regexp",
                    "is string",
                    "is sync function",
                    "is sync",
                    "is undefined",
                    "is weak map",
                    "is-arguments",
                    "is-array",
                    "is-async-function",
                    "is-async",
                    "is-bool",
                    "is-boolean",
                    "is-class",
                    "is-conventional-class",
                    "is-date",
                    "is-empty-array",
                    "is-empty-keys",
                    "is-empty-map",
                    "is-empty-plain-object",
                    "is-empty-weak-map",
                    "is-error",
                    "is-function",
                    "is-map",
                    "is-native-class",
                    "is-null",
                    "is-nullish",
                    "is-number",
                    "is-object",
                    "is-plain-obj",
                    "is-plain-object",
                    "is-regexp",
                    "is-string",
                    "is-sync-function",
                    "is-sync",
                    "is-undefined",
                    "is-weak-map",
                    "is",
                    "isArguments",
                    "isArray",
                    "isAsyncFunction",
                    "isBool",
                    "isBoolean",
                    "isClass",
                    "isConventionalClass",
                    "isDate",
                    "isEmptyArray",
                    "isEmptyKeys",
                    "isEmptyMap",
                    "isEmptyPlainObject",
                    "isEmptyWeakMap",
                    "isError",
                    "isFunction",
                    "isMap",
                    "isNativeClass",
                    "isNull",
                    "isNullish",
                    "isNumber",
                    "isObject",
                    "isRegExp",
                    "isString",
                    "isSync",
                    "isSyncFunction",
                    "isUndefined",
                    "isWeakMap",
                    "javascript-type",
                    "javascript",
                    "keys",
                    "kind",
                    "map",
                    "native class",
                    "native-class",
                    "native",
                    "nativeClass",
                    "null",
                    "number",
                    "object",
                    "plain object",
                    "plain objects",
                    "plain-object",
                    "plain-objects",
                    "plain",
                    "plainObject",
                    "primitive-types",
                    "primitive",
                    "pure",
                    "regex",
                    "regexp",
                    "regular expression",
                    "simple",
                    "string",
                    "sync",
                    "syncFunction",
                    "test",
                    "type-check",
                    "type-checker",
                    "type-checking",
                    "type",
                    "typechecker",
                    "typeguards",
                    "typeof",
                    "types",
                    "typescript",
                    "undefined",
                    "util",
                    "utility",
                    "validate",
                    "validation",
                    "vanilla",
                    "verify",
                    "weak map",
                    "weak-map",
                    "weakMap",
                    "what-type"
                ],
                "license": "MIT",
                "main": "edition-node-12/index.js",
                "maintainers": [
                    {
                        "name": "Benjamin Lupton",
                        "email": "b@lupton.cc",
                        "url": "http://balupton.com"
                    }
                ],
                "module": "edition-browsers/index.js",
                "name": "typechecker",
                "prettier": {
                    "semi": false,
                    "singleQuote": true
                },
                "repository": {
                    "type": "git",
                    "url": "git+https://github.com/bevry/typechecker.git"
                },
                "scripts": {
                    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out ./.next",
                    "our:compile": "npm run our:compile:edition-browsers && npm run our:compile:edition-node-12",
                    "our:compile:edition-browsers": "env BABEL_ENV=edition-browsers babel --extensions \".ts,.tsx\" --out-dir ./edition-browsers ./source",
                    "our:compile:edition-node-12": "env BABEL_ENV=edition-node-12 babel --extensions \".ts,.tsx\" --out-dir ./edition-node-12 ./source",
                    "our:deploy": "echo no need for this project",
                    "our:meta": "npm run our:meta:docs && npm run our:meta:projectz",
                    "our:meta:docs": "npm run our:meta:docs:typedoc",
                    "our:meta:docs:typedoc": "rm -Rf ./docs && typedoc --mode file --exclude '**/+(*test*|node_modules)' --excludeExternals --name \"$npm_package_name\" --readme ./README.md --out ./docs ./source",
                    "our:meta:projectz": "projectz compile",
                    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
                    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
                    "our:release:check-dirty": "git diff --exit-code",
                    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
                    "our:release:push": "git push origin master && git push origin --tags",
                    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
                    "our:setup": "npm run our:setup:install",
                    "our:setup:install": "npm install",
                    "our:test": "npm run our:verify && npm test",
                    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint && npm run our:verify:prettier && npm run our:verify:typescript",
                    "our:verify:directory": "npx valid-directory",
                    "our:verify:eslint": "eslint --fix --ignore-pattern '**/*.d.ts' --ignore-pattern '**/vendor/' --ignore-pattern '**/node_modules/' --ext .mjs,.js,.jsx,.ts,.tsx ./source",
                    "our:verify:prettier": "prettier --write ./source/**",
                    "our:verify:typescript": "tsc --noEmit --project tsconfig.json",
                    "test": "node ./edition-node-12/test.js"
                },
                "title": "TypeChecker",
                "type": "commonjs",
                "types": "source/index.ts",
                "version": "6.3.0"
            },
            "source": {},
            "tsconfig": {
                "compilerOptions": {
                    "allowJs": true,
                    "esModuleInterop": true,
                    "isolatedModules": true,
                    "maxNodeModuleJsDepth": 5,
                    "moduleResolution": "node",
                    "noEmit": true,
                    "strict": true,
                    "target": "esnext"
                },
                "include": [
                    "source"
                ]
            }
        },
        "util": {
            "package": {
                "_from": "util@^0.10.3",
                "_id": "util@0.10.4",
                "_inBundle": false,
                "_integrity": "sha512-0Pm9hTQ3se5ll1XihRic3FDIku70C+iHUdT/W926rSgHV5QgXsYbKZN8MSC3tJtSkhuROzvsQjAaFENRXr+19A==",
                "_location": "/util",
                "_phantomChildren": {},
                "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "util@^0.10.3",
                    "name": "util",
                    "escapedName": "util",
                    "rawSpec": "^0.10.3",
                    "saveSpec": null,
                    "fetchSpec": "^0.10.3"
                },
                "_requiredBy": [
                    "/path"
                ],
                "_resolved": "https://registry.npmjs.org/util/-/util-0.10.4.tgz",
                "_shasum": "3aa0125bfe668a4672de58857d3ace27ecb76901",
                "_spec": "util@^0.10.3",
                "_where": "/src/github.com/Czaplicki/mcfunction-support-resources/node_modules/path",
                "author": {
                    "name": "Joyent",
                    "url": "http://www.joyent.com"
                },
                "browser": {
                    "./support/isBuffer.js": "./support/isBufferBrowser.js"
                },
                "bugs": {
                    "url": "https://github.com/defunctzombie/node-util/issues"
                },
                "bundleDependencies": false,
                "dependencies": {
                    "inherits": "2.0.3"
                },
                "deprecated": false,
                "description": "Node.JS util module",
                "devDependencies": {
                    "zuul": "~1.0.9"
                },
                "files": [
                    "util.js",
                    "support"
                ],
                "homepage": "https://github.com/defunctzombie/node-util",
                "keywords": [
                    "util"
                ],
                "license": "MIT",
                "main": "./util.js",
                "name": "util",
                "repository": {
                    "type": "git",
                    "url": "git://github.com/defunctzombie/node-util.git"
                },
                "scripts": {
                    "test": "node test/node/*.js && zuul test/browser/*.js"
                },
                "version": "0.10.4"
            },
            "support": {}
        }
    },
    "package-lock": {
        "requires": true,
        "lockfileVersion": 1,
        "dependencies": {
            "coffeescript": {
                "version": "2.5.1",
                "resolved": "https://registry.npmjs.org/coffeescript/-/coffeescript-2.5.1.tgz",
                "integrity": "sha512-J2jRPX0eeFh5VKyVnoLrfVFgLZtnnmp96WQSLAS8OrLm2wtQLcnikYKe1gViJKDH7vucjuhHvBKKBP3rKcD1tQ=="
            },
            "coffescript": {
                "version": "0.0.1-security",
                "resolved": "https://registry.npmjs.org/coffescript/-/coffescript-0.0.1-security.tgz",
                "integrity": "sha512-VHJ9ut+YjMDk6wgTe/2wW8e2eP8XqAsP7dDQwX6JMsy3ME2swQxU6lME1FZrhB8A01/5H90+0qCA90RF43BHRA=="
            },
            "cson": {
                "version": "6.9.0",
                "resolved": "https://registry.npmjs.org/cson/-/cson-6.9.0.tgz",
                "integrity": "sha512-iqtKZ8q2oWFSU4qxP+y2pekVEXzzE1wFXaAu2U8qR69XnNoImtexPHNw09ksBonfuhLjYsaOFjbt5iKu0zACcA==",
                "requires": {
                    "coffeescript": "^2.4.1",
                    "cson-parser": "^4.0.3",
                    "extract-opts": "^4.3.0",
                    "requirefresh": "^3.3.0",
                    "safefs": "^5.5.0"
                }
            },
            "cson-parser": {
                "version": "4.0.4",
                "resolved": "https://registry.npmjs.org/cson-parser/-/cson-parser-4.0.4.tgz",
                "integrity": "sha512-veObnzR9fDs/+kvio0I+jeZXjsJ9jF0jtisl7g+z9J0YzlJ0UjCaGtbUd6JgKcfBlF7RSaSb7GMJYvGqp64pcg==",
                "requires": {
                    "coffeescript": "^1.10.0"
                },
                "dependencies": {
                    "coffeescript": {
                        "version": "1.12.7",
                        "resolved": "https://registry.npmjs.org/coffeescript/-/coffeescript-1.12.7.tgz",
                        "integrity": "sha512-pLXHFxQMPklVoEekowk8b3erNynC+DVJzChxS/LCBBgR6/8AJkHivkm//zbowcfc7BTCAjryuhx6gPqPRfsFoA=="
                    }
                }
            },
            "eachr": {
                "version": "4.5.0",
                "resolved": "https://registry.npmjs.org/eachr/-/eachr-4.5.0.tgz",
                "integrity": "sha512-9I664RWp6p8jvcHZIwo7bWaiSaUmA1wNSLKwNZEiaYjqiTARq3cGjyRiIunsopZv4QMmX3T5Hs17QoPAzdYxfg==",
                "requires": {
                    "typechecker": "^6.2.0"
                }
            },
            "extract-opts": {
                "version": "4.3.0",
                "resolved": "https://registry.npmjs.org/extract-opts/-/extract-opts-4.3.0.tgz",
                "integrity": "sha512-Dmssi1tgKJkQsVmbP7TgW/kbdc42SAsNf6h9ClweP+dS7O24YYMTXsNwPelxhx0LF15npiWwY5ahKtyQiNgxWA==",
                "requires": {
                    "eachr": "^4.5.0",
                    "typechecker": "^6.2.0"
                }
            },
            "fs": {
                "version": "0.0.1-security",
                "resolved": "https://registry.npmjs.org/fs/-/fs-0.0.1-security.tgz",
                "integrity": "sha1-invTcYa23d84E/I4WLV+yq9eQdQ="
            },
            "graceful-fs": {
                "version": "4.2.3",
                "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.3.tgz",
                "integrity": "sha512-a30VEBm4PEdx1dRB7MFK7BejejvCvBronbLjht+sHuGYj8PHs7M/5Z+rt5lw551vZ7yfTCj4Vuyy3mSJytDWRQ=="
            },
            "inherits": {
                "version": "2.0.3",
                "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
                "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="
            },
            "path": {
                "version": "0.12.7",
                "resolved": "https://registry.npmjs.org/path/-/path-0.12.7.tgz",
                "integrity": "sha1-1NwqUGxM4hl+tIHr/NWzbAFAsQ8=",
                "requires": {
                    "process": "^0.11.1",
                    "util": "^0.10.3"
                }
            },
            "process": {
                "version": "0.11.10",
                "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",
                "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI="
            },
            "requirefresh": {
                "version": "3.3.0",
                "resolved": "https://registry.npmjs.org/requirefresh/-/requirefresh-3.3.0.tgz",
                "integrity": "sha512-6IPvbg29edHMtnElBN9p6Qy8uFuOcOEisHOmS+p+EUKDiHhcLx8ehJdwHrXhY4CF/4GBiZx0hfN9mbcJ0TMgEA=="
            },
            "safefs": {
                "version": "5.5.0",
                "resolved": "https://registry.npmjs.org/safefs/-/safefs-5.5.0.tgz",
                "integrity": "sha512-I8wa7h8Z9OpyULYkEiQoUEtAvPOlsvmYSmD2PD0hVUs4Hhr5BHor8NDSg3qWikIba0+yz3xww0IrLvzCstYVFQ==",
                "requires": {
                    "graceful-fs": "^4.2.3"
                }
            },
            "typechecker": {
                "version": "6.3.0",
                "resolved": "https://registry.npmjs.org/typechecker/-/typechecker-6.3.0.tgz",
                "integrity": "sha512-XZmZISfAzrzGHaC2nAwXyh/O1srpTIw/sFS5K0wGRIoWgc+bpGXJLkpI5VoZg9+2SwV6tFIS3WCb3l0bNitLag=="
            },
            "util": {
                "version": "0.10.4",
                "resolved": "https://registry.npmjs.org/util/-/util-0.10.4.tgz",
                "integrity": "sha512-0Pm9hTQ3se5ll1XihRic3FDIku70C+iHUdT/W926rSgHV5QgXsYbKZN8MSC3tJtSkhuROzvsQjAaFENRXr+19A==",
                "requires": {
                    "inherits": "2.0.3"
                }
            }
        }
    }
}
